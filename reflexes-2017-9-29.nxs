// +++++ GENERAL OPTIONS +++++ //
client.extra_break = false;
client.gag_prompts = false;
client.no_prompts = false;
client.play_music = false;
client.color_inputecho = "#999";
client.color_targetecho = "#0000ff";
client.color_gmcpecho = "#777";
client.color_trigecho = "#ff0000";
client.font_stack = "Verdana";
client.font_size = "13px";
client.css_style = "standard";
client.stack_delimiter = "|";
client.scrollback_msg_limit = parseInt(200);
client.custom_colors = [];
client.custom_colors_reverted = [];
client.movement_compass = "mobile";


// +++++ VARIABLES +++++ //
client.vars = {"my_hp":"4841","my_maxhp":"4841","my_mp":"4128","my_maxmp":"4357","my_ep":"19950","my_maxep":"19950","my_wp":"16125","my_maxwp":"16125","my_nl":"78","my_xp":"8072","my_maxxp":"15320","my_blood":"100","my_bleeding":"0","my_blind":"0","my_deaf":"0","my_prone":"0","my_cloak":"0","my_fangbarrier":"0","my_phased":"0","my_elevation":"ground","my_herb":"1","my_salve":"1","my_pipe":"1","my_elixir":"1","my_moss":"1","my_tree":"1","my_renew":"1","my_affelixir":"1","my_focus":"1","my_writhing":"0","my_fallen":"0","my_soul":"100","my_residual":"0","my_madness":"0","my_balance":"1","my_equilibrium":"1","my_ability_bal":"1","my_left_arm":"1","my_right_arm":"1","my_wield_left":"handaxe286771","my_wield_right":"handaxe286822","my_mounted":"0","my_vote":"1","my_string":"H:4841/4841 M:4128/4357 E:19950/19950 W:16125/16125 NL:78/100 ","testobject":"{h:\"hrs\", e:\"egs\", s:\"scs\", r:\"rts\", d:\"drs\", c:\"cts\", b:\"brs\", [\"\"]:\"\"}","my_bal":"1","my_eq":"1","hitAttempted":false,"hitFailed":true,"lcTarget":"Salisa","lcLimb":"left leg","lcDamage":1,"lastHit":"Salisa","lcDisplayRaw":"Shirszae, Keorin, Lenn","lcWillDisplay":false,"lcDisplayList":0,"breakpoint default":8,"lcClass":"monk","lcLightAttack":"lcPunch","lcHeavyAttack":"lcKick","lcPunchDamage":1,"lcKickDamage":2,"lcUppercutDamage":1,"lcSidekickDamage":2,"lcStaffstrikeAirDamage":1,"lcStaffstrikeOtherDamage":1.75,"lcPunch":1,"lcKick":2,"lcUppercut":1,"lcSidekick":2};


// +++++ REFLEXES +++++ //
client.reflexes = {"type":"group","name":"MASTER","enabled":true,"id":1,"items":[{"type":"function","name":"onLoad","enabled":true,"id":2,"code":"// Place any code here you'd like to autorun when the system is loaded"},{"type":"function","name":"onGMCP","enabled":true,"id":3,"code":"// Place any code here you'd like to run when a GMCP message is received\n// - The GMCP message is received as \"args.gmcp_method\" and \"args.gmcp_args\"\n\n"},{"type":"trigger","name":"test test","enabled":false,"id":4,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"(H:)","actions":[{"action":"script","script":"var colourtest = \"asdf\"\ndisplay_notice(colourtest.fontcolor(\"green\"))"}]},{"type":"event","name":"","enabled":false,"id":5,"evtype":"GMCP","evsubtype":"Char.Vitals","actions":[{"action":"notify","notice":"1","notice_fg":"#ff0000","notice_bg":"#000000"}]},{"type":"alias","name":"target set","enabled":true,"id":51,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"client.target = args[1]\n\nclient.print(\"Target = \" + client.target.fontcolor(\"orange\"))"}],"text":"^ta (.*)$"},{"type":"alias","name":"testtest","enabled":true,"id":6,"matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"//Enter the script here\ndisplay_notice(\"testing\")\nclient.kicktable = {\"t\":\"wwk\", g:\"sdk\", f:\"mnk left\", h:\"mnk right\", v:\"snk left\", b:\"snk right\", j:\"jpk\", r:\"rhk\",y:\"axk\",\n  wt:\"wrt head\", wf:\"wrt left arm\", wg:\"wrt torso\", wh:\"wrt right arm\", s:\"swk\", sl:\"slt\"}\n\nclient.limbtable = {t:\"ucp\", f:\"spp left\", g:\"hkp\", h:\"spp right\", v:\"hfp left\", b:\"hfp right\", j:\"jbp arms\", y:\"jbp head\", u:\"pmp\", n:\"blp\", c:\"\", [\"\"]:\"\"}\n\nclient.stancetable = {h:\"hrs\", e:\"egs\", s:\"scs\", r:\"rts\", d:\"drs\", c:\"cts\", b:\"brs\", [\"\"]:\"\"}\n\nclient.forcemovedir = \"ne\"\n\nclient.commandtable = {a:\"mind command apply restoration to arms\", t:\"mind command touch tree\", e:\"mind command eat bloodroot\", \nl:\"mind command bedevil\", f:\"mind command \" + forcemovedir, g:\"mind command apply restoration to torso\", [\"\"]:\"\"}\n\nsend_command(\"stand]setalias mcombo stand/stand/combo \" + client.target + \" \" + client.kicktable[args[1]] + \" \"\n + client.limbtable[args[2]] + \" \" + client.limbtable[args[3]] + \"/\" + client.stancetable[args[4]] + \"/\" + client.commandtable[args[5]])\nsend_command(\"queue add eqbal mcombo\")\n"}],"text":"^(t|f|g|h|v|b|j|r|y|wt|wf|wg|wh|s)(t|f|g|h|v|b|j|y|u|n)(t|f|g|h|v|b|j|y|u|n)(h|e|s|r|d|c|b?)(g|l|t|e|f|a?)$"},{"type":"alias","name":"object test","enabled":true,"id":7,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var ob = get_variable(\"testobject\")\n\nvar testtable = {h:\"hrs\", e:\"egs\", s:\"scs\", r:\"rts\", d:\"drs\", c:\"cts\", b:\"brs\", [\"\"]:\"\"}\n\n\n\ndisplay_notice(ob[\"b\"])"}],"text":"testobject"},{"type":"alias","name":"timer test","enabled":true,"id":8,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"//Enter the script here\n\nclient.newtimer = setTimeout(function () { // This line creates the timer to run the Timeout function\n      display_notice('ughhh', 'red', 'white') // This is just the guts, you can put anything here\n  }, 500); // Time until guts are fired - 5000 = 5 seconds"}],"text":"timertest"},{"type":"alias","name":"variable test","enabled":true,"id":9,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"//Enter the script here\nclient.newvariable = \"test\"\n\ndisplay_notice(client.newvariable)"}],"text":"vartest"},{"type":"alias","name":"variable test 2","enabled":true,"id":10,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"//Enter the script here\n\ndisplay_notice(client.newvariable)"}],"text":"var2"},{"type":"alias","name":"cancel timer","enabled":true,"id":11,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"//Enter the script here\n\nclearTimeout(client.newtimer)"}],"text":"notimer"},{"type":"alias","name":"construct object","enabled":true,"id":12,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"//Enter the script here\n \nvar testobject = "}],"text":"conob"},{"type":"alias","name":"object test","enabled":true,"id":13,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var ob = get_variable(\"testobject\")\n\nvar testtable = {h:\"hrs\", e:\"egs\", s:\"scs\", r:\"rts\", d:\"drs\", c:\"cts\", b:\"brs\", [\"\"]:\"\"}\n\n\n\ndisplay_notice(ob[\"b\"])"}],"text":"testobject"},{"type":"function","name":"lcHit","enabled":false,"id":14,"code":"//client.lcHit = function lcHit(person, location, damage){\nvar person = get_variable(\"lcTarget\")\nvar location = get_variable(\"lcLimb\")\nvar damage = get_variable(\"lcDamage\")\n//var person = client.lcTarget\n//var location = client.lcLimb\n//var damage = client.lcDamage\n\nif (client.limbcount == null) {\n    client.limbcount = {}\n};\n\nif (client.limbcount[person] == null) {\n    client.limbcount[person] = {\"head\":0, \"torso\":0, \"right arm\":0, \"left arm\":0, \"right leg\":0, \"left leg\":0, \"breakpoint\":client.breakPointDefault}\n};\n\n//if (client.displayList == null){\n//    client.displayList = []\n//}\n    \n//client.lastHit = person \nset_variable(\"lastHit\", person)\n\nif (client.recentBreak != true) { \nclient.limbcount[person][location] += damage\n}\n\nif (client.limbcount[person][location] >= client.limbcount[person][\"breakpoint\"]) {\n    client.limbcount[person][location] = 0\n    client.recentBreak = true\n    setTimeout(function () { \n    \tclient.recentBreak = false \n\t}, 100);\n    \n};\n\n//display_notice(location + \" is at \" + client.limbcount[person][location] + \"/\" + client.limbcount[person][\"breakpoint\"]);\nvar lcDisplayRaw = get_variable(\"lcDisplayList\")\nif ((get_variable(\"lcWillDisplay\") == false) || (lcDisplayRaw == undefined)) {\n    var displayList = []\n    }\nelse {\n    var displayList = lcDisplayRaw.split(\",\")\n}\n\n    displayList.push(location + \" is at \" + client.limbcount[person][location] + \"/\" + client.limbcount[person][\"breakpoint\"])\n\tset_variable(\"lcDisplayList\", displayList.toString())\n    set_variable(\"lcWillDisplay\", true)\n    //reflex_enable(reflex_find_by_name('trigger', \"lcPrompt\"))\n\nclient.lcResetTimer(person, location)\n//}"},{"type":"function","name":"lcResetTimer","enabled":false,"id":29,"code":"client.lcResetTimer = function lcResetTimer(person, location){\n\n    if (client.limbcount[person][location + \"_timer\"] != null) {\n    \tclearTimeout(client.limbcount[person][location + \"_timer\"])\n\t};\n\n\tclient.limbcount[person][location + \"_timer\"] = setTimeout(function () { \n    \t//display_notice(person + \"'s \" + location.toUpperCase() + \" has been reset\") \n        client.lcReset(person, location)\n\t}, 180000);\n    \n//    if (client.limbcount[person][location + \"_timer2\"] != null) {\n//    \tclearTimeout(client.limbcount[person][location + \"_timer2\"])\n//\t};\n\n//\tclient.limbcount[person][location + \"_timer2\"] = setTimeout(function () { \n//    \tdisplay_notice(person + \"'s \" + location.toUpperCase() + \" will reset in 1 minute!\") \n//\t}, 120000);\n}"},{"type":"function","name":"lcReset","enabled":false,"id":33,"code":"client.lcReset = function lcReset(person, location){\n    \n\n\n\tif (location == \"all\"){\n    \tvar oldBreakpoint = client.limbcount[person][\"breakpoint\"]\n    \tclient.limbcount[person] = {\"head\":0, \"torso\":0, \"right arm\":0, \"left arm\":0, \"right \tleg\":0, \"left leg\":0, \"breakpoint\":oldBreakpoint}\n        display_notice(person + \" has been reset\") \n\t}\n\telse {\n        client.limbcount[person][location] = 0\n        display_notice(person + \"'s \" + limbConversionTable[location].toUpperCase() + \" has been reset\") \n        display_notice(location + \" is at \" + client.limbcount[person][location] + \"/\" + client.limbcount[person][\"breakpoint\"]);\n    }\n}"},{"type":"function","name":"lcDisplay","enabled":false,"id":35,"code":"client.lcDisplay = function lcDisplay(){\n    var person = client.lastHit\n    for (i = 0; i < client.displayList.length; i++){\n        display_notice(client.displayList[i])\n    }\n    //client.print(\"LL: \" + client.limbcount[person][\"left leg\"] + \"/\" + client.limbcount[person][\"breakpoint\"] + \" RL: \" + client.limbcount[person][\"right leg\"] + \"/\" + client.limbcount[person][\"breakpoint\"] + \" LA: \" + client.limbcount[person][\"left arm\"] + \"/\" + client.limbcount[person][\"breakpoint\"] + \" RA: \" + client.limbcount[person][\"right arm\"] + \"/\" + client.limbcount[person][\"breakpoint\"] + \" T: \" +  client.limbcount[person][\"torso\"] + \"/\" + client.limbcount[person][\"breakpoint\"] + \" H: \" + client.limbcount[person][\"head\"] + \"/\" + client.limbcount[person][\"breakpoint\"])\n    client.displayList = []\n}"},{"type":"trigger","name":"lcPrompt","enabled":false,"id":37,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"(\\d+)h(.*)(\\d+)m(.*)","actions":[{"action":"script","script":"//client.newtimer = setTimeout(function () { \n//    client.lcDisplay();\n//  }, 1);\n\n//if (client.hitAttempted == true) {\n//    if (client.hitFailed == false) {\n//    client.lcHit(client.lcTarget, client.lcLimb, client.lcDamage)\n//        run_function(\"lcHit\")\n//\t}\n//}\nif (get_variable(\"hitAttempted\") == true){\n    set_variable(\"hitAttempted\", false)\n    if (get_variable(\"hitFailed\") == false) {\n    //client.lcHit(get_variable(\"lcTarget\"), get_variable(\"lcLimb\"), to_number(get_variable(\"lcDamage\")))\n        run_function(\"lcHit\")\n\t}\n}\nif (get_variable(\"lcWillDisplay\") == true){\n    var lcDisplayRaw = get_variable(\"lcDisplayList\")\n    var displayList = lcDisplayRaw.split(\",\")\n    var person = get_variable(\"lastHit\")\n    for (i = (displayList.length - 1); i > -1; i--){\n        display_notice(displayList[i])\n    }\n    set_variable(\"lcDisplayList\", 0)\n    set_variable(\"lcWillDisplay\", false)\n}\n\n//client.hitAttempted = false\n//client.lcDisplay();\n//reflex_disable(reflex_find_by_name('trigger', \"lcPrompt\"))\n//args[0].charAt(args[0].length - 1) +\n\n\n\n"}]},{"type":"alias","name":"lctest","enabled":true,"id":30,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"client.limbTable = {\"rl\":\"right leg\", \"ra\":\"right arm\", \"ll\":\"left leg\", \"la\":\"left arm\", \"t\":\"torso\", \"h\":\"head\"}\nclient.print(\"lctest \" + client.limbTable[args[1]])\nclient.lcHit(\"target2\", client.limbTable[args[1]], 1)"}],"text":"^lctest (rl|ll|ra|la|t|h)$"},{"type":"alias","name":"lc initualize","enabled":false,"id":31,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"client.breakPointDefault = 10\n//run_function(\"lcHit\")\nrun_function(\"lcResetTimer\")\nrun_function(\"lcReset\")\nrun_function(\"lcDisplay\")\n\n//client.hitFailedTable = [\n//    \"dodges nimbly out of the way\",\n//    \"twists his body out of harm's way\",\n//    \"twists her body out of harm's way\",\n//    \"quickly jumps back, avoiding the attack\",\n//    \"but miss\",\n//    \"moves into your attack, knocking your blow aside before viciously //countering with a strike to your head\",\n//    \"steps into the attack, grabs your arm, and throws you violently to the ground\",\n//    \"The attack rebounds back onto you!\",\n//    \"parries the attack with a deft manoeuvre\",\n//    \"parry, clumsily redirecting your attack\",\n//    \"A reflection of\"\n//    ]"}],"text":"lci"},{"type":"alias","name":"reset limb","enabled":false,"id":32,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var person = \"\"\nvar limb = \"\"\n\nif (args[2] == null){\n\tif ((args[1] == \"rl\") || (args[1] == \"ra\") || (args[1] == \"ll\") || (args[1] == \"la\") || (args[1] == \"h\") || (args[1] == \"t\") || (args[1] == \"all\")){\n        limb = args[1]\n    \tperson = client.lastHit\n    }\n   \telse if (args[1] != null) {\n        limb = \"all\"\n        person = args[1]\n    }\n    else {\n        limb = \"all\"\n        person = client.lastHit\n    }       \n}\nelse {\n    person = args[1]\n    limb = args[2]\n}\n    var limbConversionTable = {rl:\"right leg\", ll:\"left leg\", ra:\"right arm\", la:\"left arm\", t:\"torso\", h:\"head\", \"right leg\":\"right leg\", \"left leg\":\"left leg\", \"right arm\":\"right arm\", \"left arm\":\"left arm\", \"torso\":\"torso\", \"head\":\"head\"}\nlcReset(person, limbConversionTable[limb]);"}],"text":"^nn ?(\\w+)? ?(rl|ll|ra|la|t|h|all)?$"},{"type":"alias","name":"lc set hits needed","enabled":false,"id":41,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var person = \"\"\nvar hitsNeeded = \"\"\n\nif (args[1] == undefined){\n    //var person = client.lastHit.charAt(0).toUpperCase() + client.lastHit.slice(1);\n    client.print(\"null\")\n    client.print(get_variable(\"lastHit\"))\n    person = get_variable(\"lastHit\")\n    hitsNeeded = args[2]\n}\nelse{ \n    client.print(\"hmm\")\n    person = person = args[1].charAt(0).toUpperCase() + args[1].slice(1);\n    hitsNeeded = args[2]    \n}\n\nif (client.limbcount[person] == null) {\n    client.limbcount[person] = {\"head\":0, \"torso\":0, \"right arm\":0, \"left arm\":0, \"right leg\":0, \"left leg\":0, \"breakpoint\":client.breakPointDefault}\n};\n\nclient.limbcount[person][\"breakpoint\"] = to_number(hitsNeeded)\nclient.print(person + \"'s break point set at \" + client.limbcount[person][\"breakpoint\"])"}],"text":"^shn ([A-z]+)? ?(\\d+)$"},{"type":"trigger","name":"lc Prompt Display","enabled":false,"id":65,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"(\\d+)h,(.*)(\\d+)m,(.*)","actions":[{"action":"script","script":"var promptlength = args[0].length\nvar person = get_variable(\"lastHit\")\nreplace_current_line( promptlength - 1, 1, \" |\" + client.limbcount[person][\"breakpoint\"]  + \"|\", \"white\")\nreplace_current_line( promptlength - 1, 1, \" \" + client.limbcount[person][\"head\"], \"red\")\nreplace_current_line( promptlength - 1, 1, \" |H:\", \"white\")\nreplace_current_line( promptlength - 1, 1, \" \" + client.limbcount[person][\"torso\"], \"orange\")\nreplace_current_line( promptlength - 1, 1, \" |T:\", \"white\")\nreplace_current_line( promptlength - 1, 1, \" \" + client.limbcount[person][\"right arm\"], \"yellow\")\nreplace_current_line( promptlength - 1, 1, \" |RA:\", \"white\")\nreplace_current_line( promptlength - 1, 1, \" \" + client.limbcount[person][\"left arm\"], \"green\")\nreplace_current_line( promptlength - 1, 1, \" |LA:\", \"white\")\nreplace_current_line( promptlength - 1, 1, \" \" + client.limbcount[person][\"right leg\"].toString(), \"blue\")\nreplace_current_line( promptlength - 1, 1, \" |RL:\", \"white\")\nreplace_current_line( promptlength - 1, 1, \" \" + client.limbcount[person][\"left leg\"].toString(), \"purple\")\nreplace_current_line( promptlength - 1, 1, \" |LL:\", \"white\")\n\n\n\n\n\n\n\n\n\n\n"}]},{"type":"group","name":"lc hit detection","enabled":false,"id":54,"items":[{"type":"trigger","name":"lc hit check","enabled":false,"id":49,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^(.*)$","actions":[{"action":"script","script":"\n\n\nvar hitFailed = false\n\n\nfor (i = 0; i < hitFailedTable.length; i++) {\n   var hitCheck = args[1].indexOf(client.hitFailedTable[i])\n   if (hitCheck > 0){\n       hitFailed = true\n   }\n}\n\n\nif (hitFailed == false) {\n    client.lcHit(client.lcTarget, client.lcLimb, client.lcDamage)\n}\n\nreflex_disable(reflex_find_by_name('trigger', \"lc hit check\"))"}]},{"type":"trigger","name":"dodged 1","enabled":true,"id":55,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^(\\w+) dodges nimbly out of the way","actions":[{"action":"script","script":"hitFailed = true"}]},{"type":"trigger","name":"dodged 2","enabled":true,"id":56,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^(\\w+) twists (his|her) body out of harm's way","actions":[{"action":"script","script":"hitFailed = true"}]},{"type":"trigger","name":"dodged 3","enabled":true,"id":57,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^(\\w+) quickly jumps back, avoiding the attack","actions":[{"action":"script","script":"hitFailed = true"}]},{"type":"trigger","name":"missed","enabled":true,"id":58,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^You lash out at (\\w+) with (.*), but miss","actions":[{"action":"script","script":"hitFailed = true"}]},{"type":"trigger","name":"rebounding","enabled":true,"id":59,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^The attack rebounds (back)? onto you","actions":[{"action":"script","script":"hitFailed = true"}]},{"type":"trigger","name":"reflection","enabled":true,"id":60,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^A reflection of (\\w+) blinks out of existence","actions":[{"action":"script","script":"hitFailed = true"}]},{"type":"trigger","name":"parried 1","enabled":true,"id":61,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^(\\w+) parries the attack with a deft manoeuvre","actions":[{"action":"script","script":"hitFailed = true"}]},{"type":"trigger","name":"parried 2","enabled":true,"id":62,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^(\\w+) fumbles (his|her) parry, clumsily redirecting your attack","actions":[{"action":"script","script":"hitFailed = true"}]},{"type":"trigger","name":"guarded 1","enabled":true,"id":63,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^(\\d+) moves into your attack, knocking your blow aside before viciously countering with a strike to your head","actions":[{"action":"script","script":"hitFailed = true"}]},{"type":"trigger","name":"guarded 2","enabled":true,"id":64,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^(\\d+) steps into the attack, grabs your arm, and throws you violently to the ground","actions":[{"action":"script","script":"hitFailed = true"}]}],"actions":[]},{"type":"group","name":"monk attacks","enabled":false,"id":50,"items":[{"type":"trigger","name":"Hammerfist","enabled":true,"id":42,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^You ball up one fist and hammerfist (\\w+)\\.$","actions":[{"action":"script","script":"if (get_variable(\"hitAttempted\") == true){\n    set_variable(\"hitAttempted\", false)\n    if (get_variable(\"hitFailed\") == false) {\n        run_function(\"lcHit\")\n\t}\n}\nset_variable(\"hitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"lcTarget\", args[1])\nset_variable(\"lcLimb\", \"left leg\")\nset_variable(\"lcDamage\", 1)\n/*if (client.hitAttempted == true) {\n    if (client.hitFailed == false) {\n    client.lcHit(client.lcTarget, client.lcLimb, client.lcDamage)\n\t}\n}\nclient.hitAttempted = true\nclient.hitFailed = false\nclient.lcTarget = args[1]\nclient.lcLimb = \"left leg\"\nclient.lcDamage = 1\nreflex_enable(reflex_find_by_name('trigger', \"lcPrompt\"))*/"}]},{"type":"trigger","name":"Spear","enabled":true,"id":22,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^You form a spear hand and stab out towards (\\w+)\\.$","actions":[{"action":"script","script":"\n//if (client.hitAttempted == true) {\n//    \tclient.print(\"hmm\")\n//    if (client.hitFailed == false) {\n//    client.lcHit(client.lcTarget, client.lcLimb, client.lcDamage)\n//\t}\n//}\nif (get_variable(\"hitAttempted\") == true){\n    set_variable(\"hitAttempted\", false)\n    if (get_variable(\"hitFailed\") == false) {\n        run_function(\"lcHit\")\n\t}\n}\nset_variable(\"hitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"lcTarget\", args[1])\nset_variable(\"lcLimb\", \"left arm\")\nset_variable(\"lcDamage\", 1)\n//client.hitAttempted = true\n//client.hitFailed = false\n//client.lcTarget = args[1]\n//client.lcLimb = \"left arm\"\n//client.lcDamage = 1\n//reflex_enable(reflex_find_by_name('trigger', \"lcPrompt\"))"}]},{"type":"trigger","name":"Hook","enabled":true,"id":43,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^You unleash a powerful hook towards (\\w+)\\.$","actions":[{"action":"script","script":"if (get_variable(\"hitAttempted\") == true){\n    set_variable(\"hitAttempted\", false)\n    if (get_variable(\"hitFailed\") == false) {\n        run_function(\"lcHit\")\n\t}\n}\nset_variable(\"hitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"lcTarget\", args[1])\nset_variable(\"lcLimb\", \"torso\")\nset_variable(\"lcDamage\", 1)\n/*if (client.hitAttempted == true) {\n    if (client.hitFailed == false) {\n    client.lcHit(client.lcTarget, client.lcLimb, client.lcDamage)\n\t}\n}\nclient.hitAttempted = true\nclient.hitFailed = false\nclient.lcTarget = args[1]\nclient.lcLimb = \"torso\"\nclient.lcDamage = 1\nreflex_enable(reflex_find_by_name('trigger', \"lcPrompt\"))*/"}]},{"type":"trigger","name":"Uppercut","enabled":true,"id":44,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^You launch a powerful uppercut at (\\w+)\\.$","actions":[{"action":"script","script":"if (get_variable(\"hitAttempted\") == true){\n    set_variable(\"hitAttempted\", false)\n    if (get_variable(\"hitFailed\") == false) {\n        run_function(\"lcHit\")\n\t}\n}\nset_variable(\"hitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"lcTarget\", args[1])\nset_variable(\"lcLimb\", \"head\")\nset_variable(\"lcDamage\", 1)\n/*if (client.hitAttempted == true) {\n    if (client.hitFailed == false) {\n    client.lcHit(client.lcTarget, client.lcLimb, client.lcDamage)\n\t}\n}\nclient.hitAttempted = true\nclient.hitFailed = false\nclient.lcTarget = args[1]\nclient.lcLimb = \"head\"\nclient.lcDamage = 1\nreflex_enable(reflex_find_by_name('trigger', \"lcPrompt\"))*/"}]},{"type":"trigger","name":"Snapkick","enabled":true,"id":45,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^You let fly at (\\w+) with a snap kick\\.$","actions":[{"action":"script","script":"if (get_variable(\"hitAttempted\") == true){\n    set_variable(\"hitAttempted\", false)\n    if (get_variable(\"hitFailed\") == false) {\n        run_function(\"lcHit\")\n\t}\n}\nset_variable(\"hitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"lcTarget\", args[1])\nset_variable(\"lcLimb\", \"left leg\")\nset_variable(\"lcDamage\", 2)\n/*if (client.hitAttempted == true) {\n    if (client.hitFailed == false) {\n    client.lcHit(client.lcTarget, client.lcLimb, client.lcDamage)\n\t}\n}\nclient.hitAttempted = true\nclient.hitFailed = false\nclient.lcTarget = args[1]\nclient.lcLimb = \"right leg\"\nclient.lcDamage = 2\nreflex_enable(reflex_find_by_name('trigger', \"lcPrompt\"))*/"}]},{"type":"trigger","name":"Moonkick","enabled":true,"id":46,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^You hurl yourself towards (\\w+) with a lightning\\-fast moon kick\\.$","actions":[{"action":"script","script":"if (get_variable(\"hitAttempted\") == true){\n    set_variable(\"hitAttempted\", false)\n    if (get_variable(\"hitFailed\") == false) {\n        run_function(\"lcHit\")\n\t}\n}\nset_variable(\"hitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"lcTarget\", args[1])\nset_variable(\"lcLimb\", \"left arm\")\nset_variable(\"lcDamage\", 2)\n/*if (client.hitAttempted == true) {\n    if (client.hitFailed == false) {\n    client.lcHit(client.lcTarget, client.lcLimb, client.lcDamage)\n\t}\n}\nclient.hitAttempted = true\nclient.hitFailed = false\nclient.lcTarget = args[1]\nclient.lcLimb = \"right arm\"\nclient.lcDamage = 2\nreflex_enable(reflex_find_by_name('trigger', \"lcPrompt\"))*/"}]},{"type":"trigger","name":"Sidekick","enabled":true,"id":47,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^You pump out at (\\w+) with a powerful side kick\\.$","actions":[{"action":"script","script":"if (get_variable(\"hitAttempted\") == true){\n    set_variable(\"hitAttempted\", false)\n    if (get_variable(\"hitFailed\") == false) {\n        run_function(\"lcHit\")\n\t}\n}\nset_variable(\"hitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"lcTarget\", args[1])\nset_variable(\"lcLimb\", \"torso\")\nset_variable(\"lcDamage\", 2)\n/*if (client.hitAttempted == true) {\n    if (client.hitFailed == false) {\n    client.lcHit(client.lcTarget, client.lcLimb, client.lcDamage)\n\t}\n}\nclient.hitAttempted = true\nclient.hitFailed = false\nclient.lcTarget = args[1]\nclient.lcLimb = \"left leg\"\nclient.lcDamage = 1\nreflex_enable(reflex_find_by_name('trigger', \"lcPrompt\"))*/"}]},{"type":"trigger","name":"Whirlwind","enabled":true,"id":48,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^You spin into the air and throw a whirlwind kick towards (\\w+)\\.$","actions":[{"action":"script","script":"if (get_variable(\"hitAttempted\") == true){\n    set_variable(\"hitAttempted\", false)\n    if (get_variable(\"hitFailed\") == false) {\n        run_function(\"lcHit\")\n\t}\n}\nset_variable(\"hitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"lcTarget\", args[1])\nset_variable(\"lcLimb\", \"head\")\nset_variable(\"lcDamage\", 2)\n/*if (client.hitAttempted == true) {\n    if (client.hitFailed == false) {\n    client.lcHit(client.lcTarget, client.lcLimb, client.lcDamage)\n\t}\n}\nclient.hitAttempted = true\nclient.hitFailed = false\nclient.lcTarget = args[1]\nclient.lcLimb = \"head\"\nclient.lcDamage = 2\nreflex_enable(reflex_find_by_name('trigger', \"lcPrompt\"))*/"}]}],"actions":[]},{"type":"alias","name":"this won't work","enabled":true,"id":15,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"client.limbcount = {}\n\nclient.limbcount[\"person\"] = {head:0, \"right arm\":0, leftarm:0, rightleg:0, leftleg:0, breakpoint:0}\n\nif (client.limbcount[\"person\"][\"right arm\"] == 0) {\ndisplay_notice(\"worked\")\n}"}],"text":"failtest"},{"type":"trigger","name":"multiline test","enabled":false,"id":36,"matching":"substring","whole_words":true,"case_sensitive":true,"text":"read","actions":[{"action":"script","script":"client.print(\"testi\")\nclient.newtimer = setTimeout(function () { \n    client.print(\"testy\");\n  }, 5);"}]},{"type":"alias","name":"global test","enabled":true,"id":16,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (client.limbcount[\"person\"][\"head\"] == 0) {\ndisplay_notice(\"worked\")\n}"}],"text":"gtest"},{"type":"alias","name":"nulltest","enabled":true,"id":17,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"client.test = \"1\"\n//client.test = null\n\nif (client.test == null) {\n    client.test = \"4\"\n}\n\ndisplay_notice(client.test)"}],"text":"ntest"},{"type":"alias","name":"add test","enabled":true,"id":18,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"client.limbcount[\"person\"][\"head\"] += 1\n\ndisplay_notice(client.limbcount[\"person\"][\"head\"].toString())"}],"text":"atest"},{"type":"function","name":"onGMCP test","enabled":true,"id":19,"code":"// Place any code here you'd like to run when a GMCP message is received\n// - The GMCP message is received as \"args.gmcp_method\" and \"args.gmcp_args\"\n\ndisplay_notice(\"2\")"},{"type":"alias","name":"print test","enabled":true,"id":20,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var stringtest = \"test\"\nstringtest.fontcolor(\"green\")\n\nclient.print(stringtest.fontcolor(\"green\") + stringtest.fontcolor(\"red\"));\nclient.print(\"test2\")\necho(\"test3\")"}],"text":"printtest"},{"type":"alias","name":"notice test","enabled":true,"id":21,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"display_notice(\"test\")\ndisplay_notice(\"test2\")"}],"text":"notest"},{"type":"event","name":"","enabled":true,"id":23,"evtype":"GMCP","evsubtype":"Char.Vitals"},{"type":"alias","name":"function test","enabled":true,"id":24,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"//run_function(name, args, package)\nclient.functionTest = function functionTest(arg1, arg2){\n    client.print(arg1)\n   client.print(arg2)\n}\n\nclient.functionTest(\"test1\", \"test2\")\n\n//var variable1 = \"test\"\n//run_function(\"testFunction\", 1)"}],"text":"ftest"},{"type":"function","name":"testFunction","enabled":true,"id":25,"code":"//Enter the function here\n\nclient.print(args[1])"},{"type":"alias","name":"timer variable test","enabled":true,"id":26,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var timermessage = \"maybe\"\nclient.timermessage2 = timermessage + \"2\"\nclient.newtimer = setTimeout(function () { \n      display_notice(timermessage, 'red', 'white') \n  }, 1000);\ntimermessage = \"ugh\"\nclient.timermessage2 = \"ugh\""}],"text":"tvtest"},{"type":"function","name":"timertestfunction","enabled":true,"id":27,"code":"client.timertest = function timertest(limb){\n    client.newtimer = setTimeout(function () { \n      display_notice(limb, 'red', 'white') \n  }, 1000);\n};"},{"type":"alias","name":"timer limb test","enabled":true,"id":28,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"run_function(\"timertestfunction\")\ntestlimb = \"right leg\"\ntimertest(testlimb)\ntestlimb = \"left leg\"\n"}],"text":"tltest"},{"type":"alias","name":"rxtest","enabled":true,"id":34,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (args[1] == null){\n    client.print(\"blank\")\n}\nelse{\n    client.print(args[1])\n}\nif (args[2] == null){\n    client.print(\"blank\")\n}\nelse{\n    client.print(args[2])\n}"}],"text":"^rxtest (\\w+)? ?(rl|ll|ra|la|t|h)?$"},{"type":"alias","name":"reflex id check","enabled":true,"id":38,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"display_notice(reflex_find_by_name('trigger', \"lcPrompt\"))"}],"text":"refid"},{"type":"alias","name":"multiline test messup","enabled":true,"id":39,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":""}],"text":"input"},{"type":"trigger","name":"multiline test 1","enabled":false,"id":40,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"input","actions":[{"action":"script","script":"client.print(\"matched\")\nreflex_enable(reflex_find_by_name('trigger', \"multiline test\"))"}]},{"type":"trigger","name":"trigger order check 1","enabled":false,"id":53,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^(.*)$","actions":[{"action":"script","script":"display_notice(\"check2\")"}]},{"type":"trigger","name":"trigger order check 1","enabled":false,"id":52,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^(.*)$","actions":[{"action":"script","script":"display_notice(\"check1\")"}]},{"type":"alias","name":"splittest","enabled":true,"id":66,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var teststring = \"this, is, really, really, frustrating\"\nvar testarray = teststring.split(\",\")\ndisplay_notice(testarray[1])"}],"text":"splittest"},{"type":"alias","name":"gmcp send","enabled":true,"id":67,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"send_GMCP('Char.Skills.Get {\"group\" : \"weaponmastery\"}')\nsend_GMCP('Char.StatusVars.Get')"}],"text":"gmcpsend"},{"type":"alias","name":"","enabled":true,"id":68,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"client.lagtest11 = 3\nclient.lagtest12 = 3\nclient.lagtest13 = 3\nclient.lagtest14 = 3\ndisplay_notice(\"test complete\")"}],"text":"lagtest"}]};
client.packages = [{"name":"numpad movement","enabled":true,"description":"Move around the world with your keyboard's number pad. 8=north, 9=northeast, etc. Use '/' for in, '*' for out, '-' for up and '+' for down. The 5 key will look at the room you're in.","type":"group","id":1,"items":[{"type":"keybind","name":"sw","enabled":true,"id":2,"key":"97","actions":[{"command":"sw"}],"key_alt":false,"key_ctrl":false,"key_shift":false},{"type":"keybind","name":"s","enabled":true,"id":3,"key":"98","actions":[{"command":"s"}],"key_alt":false,"key_ctrl":false,"key_shift":false},{"type":"keybind","name":"se","enabled":true,"id":4,"key":"99","actions":[{"command":"se"}],"key_alt":false,"key_ctrl":false,"key_shift":false},{"type":"keybind","name":"w","enabled":true,"id":5,"key":"100","actions":[{"command":"w"}],"key_alt":false,"key_ctrl":false,"key_shift":false},{"type":"keybind","name":"look","enabled":true,"id":6,"key":"101","actions":[{"command":"look"}],"key_alt":false,"key_ctrl":false,"key_shift":false},{"type":"keybind","name":"e","enabled":true,"id":7,"key":"102","actions":[{"command":"e"}],"key_alt":false,"key_ctrl":false,"key_shift":false},{"type":"keybind","name":"nw","enabled":true,"id":8,"key":"103","actions":[{"command":"nw"}],"key_alt":false,"key_ctrl":false,"key_shift":false},{"type":"keybind","name":"n","enabled":true,"id":9,"key":"104","actions":[{"command":"n"}],"key_alt":false,"key_ctrl":false,"key_shift":false},{"type":"keybind","name":"ne","enabled":true,"id":10,"key":"105","actions":[{"command":"ne"}],"key_alt":false,"key_ctrl":false,"key_shift":false},{"type":"keybind","name":"out","enabled":true,"id":11,"key":"106","actions":[{"command":"out"}],"key_alt":false,"key_ctrl":false,"key_shift":false},{"type":"keybind","name":"down","enabled":true,"id":12,"key":"107","actions":[{"command":"down"}],"key_alt":false,"key_ctrl":false,"key_shift":false},{"type":"keybind","name":"up","enabled":true,"id":13,"key":"109","actions":[{"command":"up"}],"key_alt":false,"key_ctrl":false,"key_shift":false},{"type":"keybind","name":"in","enabled":true,"id":14,"key":"111","actions":[{"command":"in"}],"key_alt":false,"key_ctrl":false,"key_shift":false}]},{"name":"monk combos","enabled":true,"description":"monk combos","type":"group","id":1,"items":[{"type":"alias","name":"object test","enabled":true,"id":2,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[],"text":"testobject","items":[]}]},{"name":"knlc","enabled":true,"description":"Nexus Limb Counter","type":"group","id":1,"items":[{"type":"function","name":"lcHit","enabled":true,"id":2,"code":"\nvar person = get_variable(\"lcTarget\")\nvar location = get_variable(\"lcLimb\")\nvar damage = get_variable(\"lcDamage\")\n\n\nif (client.limbcount == null) {\n    run_function(\"lcLogin\", \"\", \"knlc\")\n};\n\nif (client.limbcount[person] == null) {\n    client.limbcount[person] = {\"head\":0, \"torso\":0, \"right arm\":0, \"left arm\":0, \"right leg\":0, \"left leg\":0, \"breakpoint\":get_variable(\"breakpoint default\"), \"head_colour\":\"green\", \"head_colour\":\"green\", \"torso_colour\":\"green\", \"right arm_colour\":\"green\", \"left arm_colour\":\"green\", \"right leg_colour\":\"green\", \"left leg_colour\":\"green\"}\n};\n\n//if (client.displayList == null){\n//    client.displayList = []\n//}\n    \n//client.lastHit = person \nset_variable(\"lastHit\", person)\n\nif (client.recentBreak != true) { \nclient.limbcount[person][location] += damage\n}\n\nvar lcDisplayRaw = get_variable(\"lcDisplayList\")\nif ((get_variable(\"lcWillDisplay\") == false) || (lcDisplayRaw == undefined)) {\n    var displayList = []\n    }\nelse {\n    var displayList = lcDisplayRaw.split(\",\")\n}\n\nif (client.limbcount[person][location] >= client.limbcount[person][\"breakpoint\"]) {\n    client.limbcount[person][location] = 0\n    client.recentBreak = true\n    displayList.push(\"red\")\n    displayList.push(\"(knlc:)\" + person + \"'s \" + location + \" BROKE\")\n\n    setTimeout(function () { \n    \tclient.recentBreak = false \n\t}, 100);\n    client.limbcount[person][location + \"_colour\"] = \"green\"\n}\nelse if ((client.limbcount[person][\"breakpoint\"] - client.limbcount[person][location]) <= get_variable(get_variable(\"lcLightAttack\"))){\n    displayList.push(\"red\")\n    client.limbcount[person][location + \"_colour\"] = \"red\"\n    displayList.push(\"(knlc): \" + person + \"'s \" + location + \" is at \" + client.limbcount[person][location] + \"/\" + client.limbcount[person][\"breakpoint\"])\n}\nelse if ((client.limbcount[person][\"breakpoint\"] - client.limbcount[person][location]) <= get_variable(get_variable(\"lcHeavyAttack\"))) {\n    client.limbcount[person][location + \"_colour\"] = \"orange\"\n    displayList.push(\"orange\")\n    displayList.push(\"(knlc): \" + person + \"'s \" + location + \" is at \" + client.limbcount[person][location] + \"/\" + client.limbcount[person][\"breakpoint\"])\n\n}\nelse {\n    displayList.push(\"green\")\n    displayList.push(\"(knlc): \" + person + \"'s \" + location + \" is at \" + client.limbcount[person][location] + \"/\" + client.limbcount[person][\"breakpoint\"])\n    client.limbcount[person][location + \"_colour\"] = \"green\"\n\n}\n\n\tset_variable(\"lcDisplayList\", displayList.toString())\n    set_variable(\"lcWillDisplay\", true)\n\n//display_notice(location + \" is at \" + client.limbcount[person][location] + \"/\" + client.limbcount[person][\"breakpoint\"]);\n\n\n    //displayList.push(location + \" is at \" + client.limbcount[person][location] + \"/\" + client.limbcount[person][\"breakpoint\"])\n\n    //reflex_enable(reflex_find_by_name('trigger', \"lcPrompt\"))\n\nclient.lcResetTimer(person, location)\n//}","items":[]},{"type":"function","name":"lcResetTimer","enabled":true,"id":3,"code":"client.lcResetTimer = function lcResetTimer(person, location){\n\n    if (client.limbcount[person][location + \"_timer\"] != null) {\n    \tclearTimeout(client.limbcount[person][location + \"_timer\"])\n\t};\n\n\tclient.limbcount[person][location + \"_timer\"] = setTimeout(function () { \n    \t//display_notice(person + \"'s \" + location.toUpperCase() + \" has been reset\") \n        client.lcReset(person, location)\n\t}, 180000);\n}","items":[]},{"type":"function","name":"lcReset","enabled":true,"id":4,"code":"client.lcReset = function lcReset(person, location){\n    \n\n\n\tif (location == \"all\"){\n    \tvar oldBreakpoint = client.limbcount[person][\"breakpoint\"]\n    \tclient.limbcount[person] = {\"head\":0, \"torso\":0, \"right arm\":0, \"left arm\":0, \"right leg\":0, \"left leg\":0, \"breakpoint\":get_variable(\"breakpoint default\"), \"head_colour\":\"green\", \"head_colour\":\"green\", \"torso_colour\":\"green\", \"right arm_colour\":\"green\", \"left arm_colour\":\"green\", \"right leg_colour\":\"green\", \"left leg_colour\":\"green\"}\n        display_notice(person + \" has been reset\") \n\t}\n\telse {\n        client.limbcount[person][location] = 0\n        display_notice(person + \"'s \" + limbConversionTable[location].toUpperCase() + \" has been reset\") \n        client.limbcount[person][location + \"_colour\"] = \"green\"\n        display_notice(location + \" is at \" + client.limbcount[person][location] + \"/\" + client.limbcount[person][\"breakpoint\"]);\n    }\n}","items":[]},{"type":"function","name":"lcDisplay","enabled":true,"id":5,"code":"client.lcDisplay = function lcDisplay(){\n    var person = client.lastHit\n    for (i = 0; i < client.displayList.length; i++){\n        display_notice(client.displayList[i])\n    }\n    //client.print(\"LL: \" + client.limbcount[person][\"left leg\"] + \"/\" + client.limbcount[person][\"breakpoint\"] + \" RL: \" + client.limbcount[person][\"right leg\"] + \"/\" + client.limbcount[person][\"breakpoint\"] + \" LA: \" + client.limbcount[person][\"left arm\"] + \"/\" + client.limbcount[person][\"breakpoint\"] + \" RA: \" + client.limbcount[person][\"right arm\"] + \"/\" + client.limbcount[person][\"breakpoint\"] + \" T: \" +  client.limbcount[person][\"torso\"] + \"/\" + client.limbcount[person][\"breakpoint\"] + \" H: \" + client.limbcount[person][\"head\"] + \"/\" + client.limbcount[person][\"breakpoint\"])\n    client.displayList = []\n}","items":[]},{"type":"trigger","name":"lcPrompt","enabled":true,"id":6,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"(\\d+)h(.*)(\\d+)m(.*)","actions":[{"action":"script","script":"if (get_variable(\"hitAttempted\") == true){\n    set_variable(\"hitAttempted\", false)\n    if (get_variable(\"hitFailed\") == false) {\n        run_function(\"lcHit\", \"\", \"knlc\")\n\t}\n}\nif (get_variable(\"lcWillDisplay\") == true){\n    var lcDisplayRaw = get_variable(\"lcDisplayList\")\n    var displayList = lcDisplayRaw.split(\",\")\n    var person = get_variable(\"lastHit\")\n    for (i = (displayList.length - 1); i > -1; i -= 2){\n        display_notice(displayList[i], displayList[i-1])\n    }\n    set_variable(\"lcDisplayList\", 0)\n    set_variable(\"lcWillDisplay\", false)\n}\n\n\n\n"}],"items":[]},{"type":"alias","name":"lc initualize","enabled":true,"id":8,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"client.breakPointDefault = 10\nrun_function(\"lcResetTimer\", \" \", \"KNLC\")\nrun_function(\"lcReset\", \" \", \"KNLC\")\nrun_function(\"lcDisplay\", \"KNLC\")\nset_variable(\"breakpoint default\", 10)\n"}],"text":"lci","items":[]},{"type":"alias","name":"reset limb","enabled":true,"id":9,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var person = \"\"\nvar limb = \"\"\n\nif (args[2] == null){\n\tif ((args[1] == \"rl\") || (args[1] == \"ra\") || (args[1] == \"ll\") || (args[1] == \"la\") || (args[1] == \"h\") || (args[1] == \"t\") || (args[1] == \"all\")){\n        limb = args[1]\n    \tperson = client.lastHit\n    }\n   \telse if (args[1] != null) {\n        limb = \"all\"\n        person = args[1]\n    }\n    else {\n        limb = \"all\"\n        person = client.lastHit\n    }       \n}\nelse {\n    person = args[1]\n    limb = args[2]\n}\n    var limbConversionTable = {rl:\"right leg\", ll:\"left leg\", ra:\"right arm\", la:\"left arm\", t:\"torso\", h:\"head\", \"right leg\":\"right leg\", \"left leg\":\"left leg\", \"right arm\":\"right arm\", \"left arm\":\"left arm\", \"torso\":\"torso\", \"head\":\"head\"}\nlcReset(person, limbConversionTable[limb]);"}],"text":"^nn ?(\\w+)? ?(rl|ll|ra|la|t|h|all)?$","items":[]},{"type":"alias","name":"lc set hits needed","enabled":true,"id":10,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var person = \"\"\nvar hitsNeeded = \"\"\n\nif (args[1] == undefined){\n    client.print(get_variable(\"lastHit\"))\n    person = get_variable(\"lastHit\")\n    hitsNeeded = args[2]\n}\nelse{ \n    person = person = args[1].charAt(0).toUpperCase() + args[1].slice(1);\n    hitsNeeded = args[2]    \n}\n\nif (client.limbcount[person] == null) {\n    client.limbcount[person] = {\"head\":0, \"torso\":0, \"right arm\":0, \"left arm\":0, \"right leg\":0, \"left leg\":0, \"breakpoint\":client.breakPointDefault}\n};\n\nclient.limbcount[person][\"breakpoint\"] = to_number(hitsNeeded)\nclient.print(person + \"'s break point set at \" + client.limbcount[person][\"breakpoint\"])"}],"text":"^shn ([A-z]+)? ?(\\d+)$","items":[]},{"type":"trigger","name":"lc Prompt Display","enabled":true,"id":11,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"(\\d+)h,(.*)(\\d+)m,(.*)","actions":[{"action":"script","script":"if (client.limbcount == null){\n    run_function(\"lcLogin\", \"\", \"knlc\")\n}\nvar promptlength = args[0].length\nvar person = get_variable(\"lastHit\")\nreplace_current_line( promptlength - 1, 1, \" |\" + client.limbcount[person][\"breakpoint\"]  + \"|\", \"white\")\nreplace_current_line( promptlength - 1, 1, \" \" + client.limbcount[person][\"head\"], client.limbcount[person][\"head_colour\"])\nreplace_current_line( promptlength - 1, 1, \" |H:\", \"white\")\nreplace_current_line( promptlength - 1, 1, \" \" + client.limbcount[person][\"torso\"], client.limbcount[person][\"torso_colour\"])\nreplace_current_line( promptlength - 1, 1, \" |T:\", \"white\")\nreplace_current_line( promptlength - 1, 1, \" \" + client.limbcount[person][\"right arm\"], client.limbcount[person][\"right arm_colour\"])\nreplace_current_line( promptlength - 1, 1, \" |RA:\", \"white\")\nreplace_current_line( promptlength - 1, 1, \" \" + client.limbcount[person][\"left arm\"], client.limbcount[person][\"left arm_colour\"])\nreplace_current_line( promptlength - 1, 1, \" |LA:\", \"white\")\nreplace_current_line( promptlength - 1, 1, \" \" + client.limbcount[person][\"right leg\"].toString(), client.limbcount[person][\"right leg_colour\"])\nreplace_current_line( promptlength - 1, 1, \" |RL:\", \"white\")\nreplace_current_line( promptlength - 1, 1, \" \" + client.limbcount[person][\"left leg\"].toString(), client.limbcount[person][\"left leg_colour\"])\nreplace_current_line( promptlength - 1, 1, \" |LL:\", \"white\")\n\n\n\n\n\n\n\n\n\n\n"}],"items":[]},{"type":"group","name":"lc hit detection","enabled":true,"id":12,"items":[{"type":"trigger","name":"dodged 1","enabled":true,"id":15,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^(\\w+) dodges nimbly out of the way","actions":[{"action":"script","script":"set_variable(\"hitFailed\", true)"}],"items":[]},{"type":"trigger","name":"dodged 2","enabled":true,"id":16,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^(\\w+) twists (his|her) body out of harm's way","actions":[{"action":"script","script":"set_variable(\"hitFailed\", true)"}],"items":[]},{"type":"trigger","name":"dodged 3","enabled":true,"id":17,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^(\\w+) quickly jumps back, avoiding the attack","actions":[{"action":"script","script":"set_variable(\"hitFailed\", true)"}],"items":[]},{"type":"trigger","name":"missed","enabled":true,"id":18,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You lash out at (\\w+) with (.*), but miss","actions":[{"action":"script","script":"set_variable(\"hitFailed\", true)"}],"items":[]},{"type":"trigger","name":"rebounding","enabled":true,"id":19,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^The attack rebounds (back)? onto you","actions":[{"action":"script","script":"set_variable(\"hitFailed\", true)"}],"items":[]},{"type":"trigger","name":"reflection","enabled":true,"id":20,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^A reflection of (\\w+) blinks out of existence","actions":[{"action":"script","script":"set_variable(\"hitFailed\", true)"}],"items":[]},{"type":"trigger","name":"parried 1","enabled":true,"id":21,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^(\\w+) parries the attack with a deft manoeuvre","actions":[{"action":"script","script":"set_variable(\"hitFailed\", true)\n"}],"items":[]},{"type":"trigger","name":"parried 2","enabled":true,"id":22,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^(\\w+) fumbles (his|her) parry, clumsily redirecting your attack","actions":[{"action":"script","script":"set_variable(\"hitFailed\", true)"}],"items":[]},{"type":"trigger","name":"guarded 1","enabled":true,"id":23,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^(\\d+) moves into your attack, knocking your blow aside before viciously countering with a strike to your head","actions":[{"action":"script","script":"set_variable(\"hitFailed\", true)"}],"items":[]},{"type":"trigger","name":"guarded 2","enabled":true,"id":24,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^(\\d+) steps into the attack, grabs your arm, and throws you violently to the ground","actions":[{"action":"script","script":"set_variable(\"hitFailed\", true)"}],"items":[]}],"actions":[]},{"type":"group","name":"monk group","enabled":true,"id":13,"items":[{"type":"trigger","name":"Hammerfist","enabled":true,"id":25,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You ball up one fist and hammerfist (\\w+)\\.$","actions":[{"action":"script","script":"if (get_variable(\"hitAttempted\") == true){\n    set_variable(\"hitAttempted\", false)\n    if (get_variable(\"hitFailed\") == false) {\n        run_function(\"lcHit\", \" \", \"KNLC\")\n\t}\n}\nset_variable(\"hitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"lcTarget\", args[1])\nset_variable(\"lcLimb\", \"left leg\")\nset_variable(\"lcDamage\", 1)"}],"items":[]},{"type":"trigger","name":"Spear","enabled":true,"id":26,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You form a spear hand and stab out towards (\\w+)\\.$","actions":[{"action":"script","script":"if (get_variable(\"hitAttempted\") == true){\n    set_variable(\"hitAttempted\", false)\n    if (get_variable(\"hitFailed\") == false) {\n        run_function(\"lcHit\", \" \", \"KNLC\")\n\t}\n}\nset_variable(\"hitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"lcTarget\", args[1])\nset_variable(\"lcLimb\", \"left arm\")\nset_variable(\"lcDamage\", 1)\n"}],"items":[]},{"type":"trigger","name":"Hook","enabled":true,"id":27,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You unleash a powerful hook towards (\\w+)\\.$","actions":[{"action":"script","script":"if (get_variable(\"hitAttempted\") == true){\n    set_variable(\"hitAttempted\", false)\n    if (get_variable(\"hitFailed\") == false) {\n        run_function(\"lcHit\", \" \", \"KNLC\")\n\t}\n}\nset_variable(\"hitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"lcTarget\", args[1])\nset_variable(\"lcLimb\", \"torso\")\nset_variable(\"lcDamage\", 1)"}],"items":[]},{"type":"trigger","name":"Uppercut","enabled":true,"id":28,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You launch a powerful uppercut at (\\w+)\\.$","actions":[{"action":"script","script":"if (get_variable(\"hitAttempted\") == true){\n    set_variable(\"hitAttempted\", false)\n    if (get_variable(\"hitFailed\") == false) {\n        run_function(\"lcHit\", \" \", \"KNLC\")\n\t}\n}\nset_variable(\"hitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"lcTarget\", args[1])\nset_variable(\"lcLimb\", \"head\")\nset_variable(\"lcDamage\", 1)"}],"items":[]},{"type":"trigger","name":"Snapkick","enabled":true,"id":29,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You let fly at (\\w+) with a snap kick\\.$","actions":[{"action":"script","script":"if (get_variable(\"hitAttempted\") == true){\n    set_variable(\"hitAttempted\", false)\n    if (get_variable(\"hitFailed\") == false) {\n        run_function(\"lcHit\", \"\", \"KNLC\")\n\t}\n}\nset_variable(\"hitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"lcTarget\", args[1])\nset_variable(\"lcLimb\", \"left leg\")\nset_variable(\"lcDamage\", 2)"}],"items":[]},{"type":"trigger","name":"Moonkick","enabled":true,"id":30,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You hurl yourself towards (\\w+) with a lightning\\-fast moon kick\\.$","actions":[{"action":"script","script":"if (get_variable(\"hitAttempted\") == true){\n    set_variable(\"hitAttempted\", false)\n    if (get_variable(\"hitFailed\") == false) {\n        run_function(\"lcHit\", \" \", \"KNLC\")\n\t}\n}\nset_variable(\"hitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"lcTarget\", args[1])\nset_variable(\"lcLimb\", \"left arm\")\nset_variable(\"lcDamage\", 2)"}],"items":[]},{"type":"trigger","name":"Sidekick","enabled":true,"id":31,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You pump out at (\\w+) with a powerful side kick\\.$","actions":[{"action":"script","script":"if (get_variable(\"hitAttempted\") == true){\n    set_variable(\"hitAttempted\", false)\n    if (get_variable(\"hitFailed\") == false) {\n        run_function(\"lcHit\", \" \", \"KNLC\")\n\t}\n}\nset_variable(\"hitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"lcTarget\", args[1])\nset_variable(\"lcLimb\", \"torso\")\nset_variable(\"lcDamage\", 2)"}],"items":[]},{"type":"trigger","name":"Whirlwind","enabled":true,"id":32,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You spin into the air and throw a whirlwind kick towards (\\w+)\\.$","actions":[{"action":"script","script":"if (get_variable(\"hitAttempted\") == true){\n    set_variable(\"hitAttempted\", false)\n    if (get_variable(\"hitFailed\") == false) {\n        run_function(\"lcHit\", \"\", \"KNLC\")\n\t}\n}\nset_variable(\"hitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"lcTarget\", args[1])\nset_variable(\"lcLimb\", \"head\")\nset_variable(\"lcDamage\", 2)"}],"items":[]}],"actions":[]},{"type":"group","name":"magi group","enabled":false,"id":39,"items":[{"type":"trigger","name":"staffstrike","enabled":true,"id":64,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You call upon (.*?) and unleash a forceful blow towards (\\w+)'s (.*?) with your trusty staff\\.","actions":[{"action":"script","script":"set_variable(\"hitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"lcTarget\", args[2])\nset_variable(\"lcLimb\", args[3])\nif (args[1] == \"Whiirh\") {\n\tset_variable(\"lcDamage\", get_variable(\"lcStaffstrikeAir\"))\n}\nelse {\n    set_variable(\"lcDamage\", get_variable(\"lcStaffstrikeOther\"))\n}"}]}],"actions":[]},{"type":"group","name":"dragon group","enabled":false,"id":46,"items":[{"type":"trigger","name":"dragonrend","enabled":true,"id":57,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^Lunging forward with long, flashing claws extended, you tear into the flesh of (\\w+)'s (.*)\\.","actions":[{"action":"script","script":"set_variable(\"hitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"lcTarget\", args[1])\nset_variable(\"lcLimb\", args[2])\nset_variable(\"lcDamage\", \"lcDragonRend\")"}]}],"actions":[]},{"type":"group","name":"dwb group","enabled":false,"id":45,"items":[{"type":"trigger","name":"flail whirl","enabled":true,"id":53,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You skilfully whirl (.*) toward the (.*) of (\\w+)","actions":[{"action":"script","script":"if (get_variable(\"hitAttempted\") == true){\n    set_variable(\"hitAttempted\", false)\n    if (get_variable(\"hitFailed\") == false) {\n        run_function(\"lcHit\", \" \", \"KNLC\")\n\t}\n}\nset_variable(\"hitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"lcTarget\", args[3])\nset_variable(\"lcLimb\", args[2])\nset_variable(\"lcDamage\", get_variable(\"lcMorningstar\"))"}]},{"type":"trigger","name":"morningstar whirl (whip)","enabled":true,"id":58,"matching":"substring","whole_words":false,"case_sensitive":false,"text":"^You whip (.*) toward the (.*) of (\\w+)","actions":[{"action":"script","script":"if (get_variable(\"hitAttempted\") == true){\n    set_variable(\"hitAttempted\", false)\n    if (get_variable(\"hitFailed\") == false) {\n        run_function(\"lcHit\", \" \", \"KNLC\")\n\t}\n}\nset_variable(\"hitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"lcTarget\", args[3])\nset_variable(\"lcLimb\", args[2])\nset_variable(\"lcDamage\", get_variable(\"lcMorningstar\"))"}]},{"type":"trigger","name":"morningstar whirl","enabled":true,"id":52,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You skilfully whirl (.*) morningstar toward the (.*) of (\\w+)","actions":[{"action":"script","script":"if (get_variable(\"hitAttempted\") == true){\n    set_variable(\"hitAttempted\", false)\n    if (get_variable(\"hitFailed\") == false) {\n        run_function(\"lcHit\", \" \", \"KNLC\")\n\t}\n}\nset_variable(\"hitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"lcTarget\", args[3])\nset_variable(\"lcLimb\", args[2])\nset_variable(\"lcDamage\", get_variable(\"lcMorningstar\"))"}]},{"type":"trigger","name":"assault","enabled":true,"id":67,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^Whirling both of your weapons above your head, you unleash a vicious assault at the (.*?) of (\\w+)\\.","actions":[{"action":"script","script":"set_variable(\"hitFailed\", false)\nset_variable(\"lcTarget\", args[2])\nset_variable(\"lcLimb\", args[1])\nset_variable(\"lcDamage\", 50)\nrun_function(\"lcHit\", \" \", \"KNLC\")"}]}],"actions":[]},{"type":"group","name":"dwc group","enabled":false,"id":48,"items":[{"type":"trigger","name":"doubleslash (slash)","enabled":true,"id":59,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^You slash into (\\w+)'s (.*?) with (.*?)\\.","actions":[{"action":"script","script":"if (get_variable(\"hitAttempted\") == true){\n    set_variable(\"hitAttempted\", false)\n    if (get_variable(\"hitFailed\") == false) {\n        run_function(\"lcHit\", \" \", \"KNLC\")\n\t}\n}\nset_variable(\"hitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"razing\", false)\nset_variable(\"lcTarget\", args[1])\nset_variable(\"lcLimb\", args[2])\nif (args[3]).indexOf(\"battleaxe\")) {\n\tset_variable(\"lcDamage\", get_variable(\"lcBattleaxeSlash\"))\n}\nelse {\n    set_variable(\"lcDamage\", get_variable(\"lcScimitarSlash\"))\n}\n\n"}]},{"type":"trigger","name":"doubleslash (viciously)","enabled":true,"id":60,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You viciously jab (.*?) into (\\w+)'s (.*?)\\.","actions":[{"action":"script","script":"if (get_variable(\"hitAttempted\") == true){\n    set_variable(\"hitAttempted\", false)\n    if (get_variable(\"hitFailed\") == false) {\n        run_function(\"lcHit\", \" \", \"KNLC\")\n\t}\n}\nset_variable(\"hitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"razing\", false)\nset_variable(\"lcTarget\", args[2])\nset_variable(\"lcLimb\", args[3])\nif (args[1]).indexOf(\"battleaxe\")) {\n\tset_variable(\"lcDamage\", get_variable(\"lcBattleaxeSlash\"))\n}\nelse {\n    set_variable(\"lcDamage\", get_variable(\"lcScimitarSlash\"))\n}"}]},{"type":"trigger","name":"doubleslash (swing)","enabled":true,"id":61,"matching":"substring","whole_words":true,"case_sensitive":true,"text":"^You swing (.*?) at (\\w+)'s (.*?) with all your might\\.","actions":[{"action":"script","script":"if (get_variable(\"hitAttempted\") == true){\n    set_variable(\"hitAttempted\", false)\n    if (get_variable(\"hitFailed\") == false) {\n        run_function(\"lcHit\", \" \", \"KNLC\")\n\t}\n}\nset_variable(\"hitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"razing\", false)\nset_variable(\"lcTarget\", args[2])\nset_variable(\"lcLimb\", args[3])\nif (args[1]).indexOf(\"battleaxe\")) {\n\tset_variable(\"lcDamage\", get_variable(\"lcBattleaxeSlash\"))\n}\nelse {\n    set_variable(\"lcDamage\", get_variable(\"lcScimitarSlash\"))\n}"}]},{"type":"trigger","name":"doubleslash (lightning-quick)","enabled":true,"id":62,"matching":"substring","whole_words":true,"case_sensitive":true,"text":"^Lightning-quick, you jab (\\w+)'s (.*?) with (.*?)\\.","actions":[{"action":"script","script":"if (get_variable(\"hitAttempted\") == true){\n    set_variable(\"hitAttempted\", false)\n    if (get_variable(\"hitFailed\") == false) {\n        run_function(\"lcHit\", \" \", \"KNLC\")\n\t}\n}\nset_variable(\"hitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"razing\", false)\nset_variable(\"lcTarget\", args[1])\nset_variable(\"lcLimb\", args[2])\nif (args[3]).indexOf(\"battleaxe\")) {\n\tset_variable(\"lcDamage\", get_variable(\"lcBattleaxeSlash\"))\n}\nelse {\n    set_variable(\"lcDamage\", get_variable(\"lcScimitarSlash\"))\n}"}]},{"type":"trigger","name":"undercut","enabled":true,"id":66,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^You swing (.*?) at the (.*?) of (\\w+) with all your might\\.","actions":[{"action":"script","script":"    set_variable(\"hitAttempted\", true)\n\tset_variable(\"hitFailed\", false)\n\tset_variable(\"lcTarget\", args[3])\n\tset_variable(\"lcLimb\", args[2])\n    set_variable(\"lcDamage\", get_variable(\"lcUndercut\"))"}]}],"actions":[]},{"type":"group","name":"snb group","enabled":false,"id":49,"items":[{"type":"trigger","name":"slice","enabled":true,"id":54,"matching":"substring","whole_words":true,"case_sensitive":true,"text":"^You slice into the (.*) of (\\w+) with (.*) (longsword|broadsword)","actions":[{"action":"script","script":"\nset_variable(\"hitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"lcTarget\", args[2])\nset_variable(\"lcLimb\", args[1])\nif (args[4] == \"broadsword\") {\n    set_variable(\"lcDamage\", \"lcBroadswordSlice\")\n}\nelse {\n    set_variable(\"lcDamage\", \"lcLongswordSlice\")\n}\n"}]},{"type":"trigger","name":"rend","enabled":true,"id":55,"matching":"substring","whole_words":true,"case_sensitive":true,"text":"^You carve into (\\w+)'s (.*) with a vicious strike, opening a bleeding wound","actions":[{"action":"command","command":""}]},{"type":"trigger","name":"weapon equip","enabled":true,"id":56,"matching":"substring","whole_words":true,"case_sensitive":true,"text":"","actions":[{"action":"command","command":""}]}],"actions":[]},{"type":"group","name":"2h group","enabled":false,"id":50,"items":[{"type":"trigger","name":"","enabled":true,"id":63,"matching":"substring","whole_words":true,"case_sensitive":true}],"actions":[]},{"type":"alias","name":"lc install","enabled":true,"id":33,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"display_notice(\"(knlc): Installing KNLC\", \"green\")\nrun_function(\"KNLC install\", \" \", \"KNLC\")"}],"text":"lcinstall"},{"type":"function","name":"KNLC install","enabled":true,"id":34,"code":"set_variable(\"breakpoint default\", 10)\nset_variable(\"lcDisplayList\", 0)\nrun_function(\"lcResetTimer\", \" \", \"KNLC\")\nrun_function(\"lcReset\", \" \", \"KNLC\")\nclient.limbcount.isInstalling = true\nclient.limbcount[get_variable(\"lastHit\")] = {\"head\":0, \"torso\":0, \"right arm\":0, \"left arm\":0, \"right leg\":0, \"left leg\":0, \"breakpoint\":get_variable(\"breakpoint default\"), \"head_colour\":\"green\", \"head_colour\":\"green\", \"torso_colour\":\"green\", \"right arm_colour\":\"green\", \"left arm_colour\":\"green\", \"right leg_colour\":\"green\", \"left leg_colour\":\"green\"\n};\n\n//display_notice(\"Please enter your class, with LCONFIG CLASS <your class> (Examples: LCONFIG CLASS RUNEWARDEN or LCONFIG CLASS MONK). Note: The command must be entered in all lowercase\", \"green\")\n\nreflex_enable(reflex_find_by_name(\"trigger\", \"lc detect class\", false, false, \"knlc\"))\nreflex_enable(reflex_find_by_name(\"trigger\", \"lc detect dragon\", false, false, \"knlc\"))\nsend_command(\"show class\")"},{"type":"trigger","name":"lc login","enabled":true,"id":35,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"Password correct. Welcome to Achaea.","actions":[{"action":"script","script":""}]},{"type":"function","name":"lcLogin","enabled":true,"id":36,"code":"display_notice(\"initialized\", \"red\")\nclient.limbcount = {}\nrun_function(\"lcResetTimer\", \" \", \"knlc\")\nrun_function(\"lcReset\", \" \", \"knlc\")\nset_variable(\"lcDisplayList\", 0)\nclient.limbcount[get_variable(\"lastHit\")] = {\"head\":0, \"torso\":0, \"right arm\":0, \"left arm\":0, \"right leg\":0, \"left leg\":0, \"breakpoint\":get_variable(\"breakpoint default\"), \"head_colour\":\"green\", \"head_colour\":\"green\", \"torso_colour\":\"green\", \"right arm_colour\":\"green\", \"left arm_colour\":\"green\", \"right leg_colour\":\"green\", \"left leg_colour\":\"green\"}\n};\n"},{"type":"alias","name":"class select","enabled":true,"id":37,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"set_variable(\"lcClass\", args[1])\nrun_function(\"lcClassSetup\", \" \", \"knlc\")"}],"text":"^lconfig class (alchemist|apostate|bard|blademaster|depthswalker|druid|infernal|jester|magi|monk|occultist|paladin|priest|runewarden|sentinel|serpent|shaman|sylvan)$"},{"type":"function","name":"lcClassSetup","enabled":true,"id":38,"code":"client.limbcount.damageTable = {\n    /*dragon*/\n    \"dragonRend\":1,\n    /*monk*/\n    \"tekuraPunch\":1,\n    \"tekuraKick\":2,\n    \"tekuraUppercut\":1,\n    \"tekuraSidekick\":2,\n    /*snb*/\n    \"longswordSlice\":1,\n    \"longswordRend\":1.75,\n    \"broadswordSlice\":1.2, //this may be a -little- low, but I rounded to hopefully make for cleaner numbers\n    \"broadswordRend\":2.1,\n    /*dwb*/\n    \"flailWhirl\":2,\n    \"morningstarWhirl\":1,\n    /*dwc*/\n    \"scimitarSlash\":1,\n    \"axeSlash\":2.3,\n    \"axeUndercut\":.9,\n    /*magi*/\n    \"staffstrikeAir\":1,\n    \"staffstrikeOther\":1.75\n}\nclient.print(\"(knlc): Configuring your class...\", \"green\")\nvar lcClass = get_variable(\"lcClass\")\n//alchemist|apostate|bard|blademaster|depthswalker|druid|sentinel|serpent|shaman|sylvan\n//infernal|jester|magi|monk|occultist|paladin|priest|runewarden|s\nvar classGroups = [\"monk\", \"magi\", \"dragon\", \"dwb\", \"dwc\", \"snb\", \"2h\", \"sylvan\"]\nfor (i = 0; i < (classGroups.length); i++){\n    reflex_disable(reflex_find_by_name(\"group\", classGroups[i] + \" group\", false, false, \"knlc\"))\n}\n//for (i = (displayList.length - 1); i > -1; i--){\n        //display_notice(displayList[i])\n    //}\nif (lcClass == \"alchemist\"){\n}\nelse if (lcClass == \"apostate\"){\n    display_notice(\"(knlc): KNLC is not configured for this class, it'll keep out of the way while you're in it\", \"green\")\n}\nelse if (lcClass == \"blademaster\"){\n    display_notice(\"(knlc): KNLC is not configured for this class, it'll keep out of the way while you're in it\", \"green\")\n}\nelse if (lcClass == \"depthswalker\"){\n    display_notice(\"(knlc): KNLC is not configured for this class, it'll keep out of the way while you're in it\", \"green\")\n}\nelse if (lcClass == \"druid\"){\n    display_notice(\"(knlc): KNLC is not configured for this class, it'll keep out of the way while you're in it\", \"green\")\n}\nelse if (lcClass == \"dragon\"){\n    reflex_enable(reflex_find_by_name(\"group\", \"dragon group\", false, false, \"knlc\"))\n    set_variable(\"lcLightAttack\", \"lcDragonRend\")\n    set_variable(\"lcHeavyAttack\", \"none\")\n    if ((get_variable(\"lcDragonRend\") == undefined) || (client.limbcount.isInstalling == true)){\n        set_variable(\"lcDragonRend\", \"dragonRend\")\n    }\n    display_notice(\"(knlc): Dragon class enabled\", \"green\")\n    set_variable(\"breakpoint default\", 4)\n}\nelse if (lcClass == \"infernal\"){\n    if (get_value(\"lcKnightspec\") == \"dwb\"){\n        reflex_enable(reflex_find_by_name(\"group\", \"dwb group\", false, false, \"knlc\"))\n        set_variable(\"lcLightAttack\", \"lcMorningstarWhirl\")\n    \tset_variable(\"lcHeavyAttack\", \"lcFlailWhirl\")\n    \tif ((get_variable(\"lcMorningstarWhirl\") == undefined) || (get_variable(\"lcFlailWhirl\") == undefined) || (client.limbcount.isInstalling == true)){\n    \t\tset_variable(\"lcMorningstarWhirl\", client.limbcount.damageTable[\"morningstarWhirl\"])\n    \t\tset_variable(\"lcFlailWhirl\", client.limbcount.damageTable[\"flailWhirl\"])\n        }\n        display_notice(\"(knlc): DWB infernal enabled\", \"green\")\n        set_variable(\"breakpoint default\", 7)\n    }\n    else if (get_value(\"lcKnightspec\") == \"dwc\"){\n        reflex_enable(reflex_find_by_name(\"group\", \"dwc group\", false, false, \"knlc\"))\n        set_variable(\"lcLightAttack\", \"lcScimitarDoubleslash\")\n    \tset_variable(\"lcHeavyAttack\", \"lcAxeDoubleslash\")\n    \tif ((get_variable(\"lcScimitarSlash\") == undefined) || (get_variable(\"lcAxeSlash\") == undefined) || (get_variable(\"lcScimitarDoubleslash\") == undefined) || (get_variable(\"lcAxeDoubleslash\") == undefined) || (get_variable(\"lcUndercut\") == undefined) || (client.limbcount.isInstalling == true)){\n    \t\tset_variable(\"lcScimitarSlash\", client.limbcount.damageTable[\"scimitarSlash\"])\n    \t\tset_variable(\"lcAxeSlash\", client.limbcount.damageTable[\"axeSlash\"])\n    \t\tset_variable(\"lcScimitarDoubleslash\",(get_variable(\"lcScimitarSlash\") * 2))\n    \t\tset_variable(\"lcAxeDoubleslash\", (get_variable(\"lcAxeSlash\") * 2))\n            set_variable(\"lcUndercut\", client.limbcount.damageTable[\"axeUndercut\"])\n        }\n        display_notice(\"(knlc): DWC infernal enabled\", \"green\")\n        set_variable(\"breakpoint default\", 7)\n    }\n    else if (get_value(\"lcKnightspec\") == \"snb\"){\n        reflex_enable(reflex_find_by_name(\"group\", \"snb group\", false, false, \"knlc\"))\n        set_variable(\"lcLightAttack\", \"lcLongswordSlice\")\n    \tset_variable(\"lcHeavyAttack\", \"lcLongswordRend\")\n    \tif ((get_variable(\"lcLongswordSlice\") == undefined) || (get_variable(\"lcLongswordRend\") == undefined) || (get_variable(\"lcBroadswordSlice\") == undefined) || (get_variable(\"lcBroadswordRend\") == undefined) || (client.limbcount.isInstalling == true)){\n    \t\tset_variable(\"lcLongswordSlice\", client.limbcount.damageTable[\"longswordSlice\"])\n    \t\tset_variable(\"lcLongswordRend\", client.limbcount.damageTable[\"longswordRend\"])\n    \t\tset_variable(\"lcBroadswordSlice\", client.limbcount.damageTable[\"broadswordSlice\"])\n    \t\tset_variable(\"lcBroadswordRend\", client.limbcount.damageTable[\"broadswordRend\"]) \n        }\n        display_notice(\"(knlc): SNB infernal enabled\", \"green\")\n        set_variable(\"breakpoint default\", 13)\n    }\n    else if (get_value(\"lcKnightspec\") == \"2h\"){\n        reflex_enable(reflex_find_by_name(\"group\", \"2h group\", false, false, \"knlc\"))\n        display_notice(\"(knlc): 2H infernal enabled\", \"green\")\n        set_variable(\"breakpoint default\", 7)\n    } \n}\nelse if (lcClass == \"jester\"){\n    display_notice(\"(knlc): KNLC is not configured for this class, it'll keep out of the way while you're in it\", \"green\")\n}\nelse if (lcClass == \"magi\"){\n    reflex_enable(reflex_find_by_name(\"group\", \"magi group\", false, false, \"knlc\"))\n        set_variable(\"lcLightAttack\", \"lcStaffstrikeAir\")\n    \tset_variable(\"lcHeavyAttack\", \"lcStaffstrikeOther\")\n    if ((get_variable(\"lcStaffstrikeAir\") == undefined) ||(get_variable(\"lcStaffstrikeOther\") == undefined) || (client.limbcount.isInstalling == true) || (client.limbcount.isInstalling == true)){\n    \t\tset_variable(\"lcStaffstrikeAir\", client.limbcount.damageTable[\"staffstrikeAir\"])\n    \t\tset_variable(\"lcStaffstrikeOther\", client.limbcount.damageTable[\"staffstrikeOther\"])\n        }\n    display_notice(\"(knlc): Magi class enabled\", \"green\")\n    set_variable(\"breakpoint default\", 12)\n}\nelse if (lcClass == \"monk\"){\n    reflex_enable(reflex_find_by_name(\"group\", \"monk group\", false, false, \"knlc\"))\n    set_variable(\"lcLightAttack\", \"lcPunch\")\n    set_variable(\"lcHeavyAttack\", \"lcKick\")\n    if ((get_variable(\"lcPunch\") == undefined) || (get_variable(\"lcKick\") == undefined) || (get_variable(\"lcUppercut\") == undefined) || (get_variable(\"lcSidekick\") == undefined) || (client.limbcount.isInstalling == true)){\n    \tset_variable(\"lcPunch\", client.limbcount.damageTable[\"tekuraPunch\"])\n    \tset_variable(\"lcKick\", client.limbcount.damageTable[\"tekuraKick\"])\n    \tset_variable(\"lcUppercut\", client.limbcount.damageTable[\"tekuraUppercut\"])\n    \tset_variable(\"lcSidekick\", client.limbcount.damageTable[\"tekuraSidekick\"])   \n    }\n    display_notice(\"(knlc): Monk class enabled\", \"green\")\n    set_variable(\"breakpoint default\", 8)\n}\nelse if (lcClass == \"occultist\"){\n    display_notice(\"KNLC is not configured for this class, it'll keep out of the way while you're in it\", \"green\")\n}\nelse if (lcClass == \"paladin\"){\n    if (get_value(\"lcKnightspec\") == \"dwb\"){\n        reflex_enable(reflex_find_by_name(\"group\", \"dwb group\", false, false, \"knlc\"))\n        set_variable(\"lcLightAttack\", \"lcMorningstarWhirl\")\n    \tset_variable(\"lcHeavyAttack\", \"lcFlailWhirl\")\n    \tif ((get_variable(\"lcMorningstarWhirl\") == undefined) || (get_variable(\"lcFlailWhirl\") == undefined) || (client.limbcount.isInstalling == true)){\n    \t\tset_variable(\"lcMorningstarWhirl\", client.limbcount.damageTable[\"morningstarWhirl\"])\n    \t\tset_variable(\"lcFlailWhirl\", client.limbcount.damageTable[\"flailWhirl\"])\n        }\n        display_notice(\"(knlc): DWB paladin enabled\", \"green\")\n        set_variable(\"breakpoint default\", 7)\n    }\n    else if (get_value(\"lcKnightspec\") == \"dwc\"){\n        reflex_enable(reflex_find_by_name(\"group\", \"dwc group\", false, false, \"knlc\"))\n        set_variable(\"lcLightAttack\", \"lcScimitarDoubleslash\")\n    \tset_variable(\"lcHeavyAttack\", \"lcAxeDoubleslash\")\n    \tif ((get_variable(\"lcScimitarSlash\") == undefined) || (get_variable(\"lcAxeSlash\") == undefined) || (get_variable(\"lcScimitarDoubleslash\") == undefined) || (get_variable(\"lcAxeDoubleslash\") == undefined) || (get_variable(\"lcUndercut\") == undefined) || (client.limbcount.isInstalling == true)){\n    \t\tset_variable(\"lcScimitarSlash\", client.limbcount.damageTable[\"scimitarSlash\"])\n    \t\tset_variable(\"lcAxeSlash\", client.limbcount.damageTable[\"axeSlash\"])\n    \t\tset_variable(\"lcScimitarDoubleslash\",(get_variable(\"lcScimitarSlash\") * 2))\n    \t\tset_variable(\"lcAxeDoubleslash\", (get_variable(\"lcAxeSlash\") * 2))\n            set_variable(\"lcUndercut\", client.limbcount.damageTable[\"axeUndercut\"])\n        }\n        display_notice(\"(knlc): DWC paladin enabled\", \"green\")\n        set_variable(\"breakpoint default\", 7)\n    }\n    else if (get_value(\"lcKnightspec\") == \"snb\"){\n        reflex_enable(reflex_find_by_name(\"group\", \"snb group\", false, false, \"knlc\"))\n        set_variable(\"lcLightAttack\", \"lcLongswordSlice\")\n    \tset_variable(\"lcHeavyAttack\", \"lcLongswordRend\")\n    \tif ((get_variable(\"lcLongswordSlice\") == undefined) || (get_variable(\"lcLongswordRend\") == undefined) || (get_variable(\"lcBroadswordSlice\") == undefined) || (get_variable(\"lcBroadswordRend\") == undefined) || (client.limbcount.isInstalling == true)){\n    \t\tset_variable(\"lcLongswordSlice\", client.limbcount.damageTable[\"longswordSlice\"])\n    \t\tset_variable(\"lcLongswordRend\", client.limbcount.damageTable[\"longswordRend\"])\n    \t\tset_variable(\"lcBroadswordSlice\", client.limbcount.damageTable[\"broadswordSlice\"])\n    \t\tset_variable(\"lcBroadswordRend\", client.limbcount.damageTable[\"broadswordRend\"]) \n        }\n        display_notice(\"(knlc): SNB paladin enabled\", \"green\")\n        set_variable(\"breakpoint default\", 13)\n    }\n    else if (get_value(\"lcKnightspec\") == \"2h\"){\n        reflex_enable(reflex_find_by_name(\"group\", \"2h group\", false, false, \"knlc\"))\n        display_notice(\"(knlc): 2H paladin enabled\", \"green\")\n        set_variable(\"breakpoint default\", 7)\n    } \n}\nelse if (lcClass == \"priest\"){\n    display_notice(\"KNLC is not configured for this class, it'll keep out of the way while you're in it\", \"green\")\n}\nelse if (lcClass == \"runewarden\"){\n    if (get_value(\"lcKnightspec\") == \"dwb\"){\n        reflex_enable(reflex_find_by_name(\"group\", \"dwb group\", false, false, \"knlc\"))\n        set_variable(\"lcLightAttack\", \"lcMorningstarWhirl\")\n    \tset_variable(\"lcHeavyAttack\", \"lcFlailWhirl\")\n    \tif ((get_variable(\"lcMorningstarWhirl\") == undefined) || (get_variable(\"lcFlailWhirl\") == undefined) || (client.limbcount.isInstalling == true)){\n    \t\tset_variable(\"lcMorningstarWhirl\", client.limbcount.damageTable[\"morningstarWhirl\"])\n    \t\tset_variable(\"lcFlailWhirl\", client.limbcount.damageTable[\"flailWhirl\"])\n        }\n        display_notice(\"(knlc): DWB runewarden enabled\", \"green\")\n        set_variable(\"breakpoint default\", 6)\n    }\n    else if (get_value(\"lcKnightspec\") == \"dwc\"){\n        reflex_enable(reflex_find_by_name(\"group\", \"dwc group\", false, false, \"knlc\"))\n        set_variable(\"lcLightAttack\", \"lcScimitarDoubleslash\")\n    \tset_variable(\"lcHeavyAttack\", \"lcAxeDoubleslash\")\n    \tif ((get_variable(\"lcScimitarSlash\") == undefined) || (get_variable(\"lcAxeSlash\") == undefined) || (get_variable(\"lcScimitarDoubleslash\") == undefined) || (get_variable(\"lcAxeDoubleslash\") == undefined) || (get_variable(\"lcUndercut\") == undefined) || (client.limbcount.isInstalling == true)){\n    \t\tset_variable(\"lcScimitarSlash\", client.limbcount.damageTable[\"scimitarSlash\"])\n    \t\tset_variable(\"lcAxeSlash\", client.limbcount.damageTable[\"axeSlash\"])\n    \t\tset_variable(\"lcScimitarDoubleslash\",(get_variable(\"lcScimitarSlash\") * 2))\n    \t\tset_variable(\"lcAxeDoubleslash\", (get_variable(\"lcAxeSlash\") * 2))\n            set_variable(\"lcUndercut\", client.limbcount.damageTable[\"axeUndercut\"])\n        }\n        display_notice(\"(knlc): DWC runewarden enabled\", \"green\")\n        set_variable(\"breakpoint default\", 6)\n    }\n    else if (get_value(\"lcKnightspec\") == \"snb\"){\n        reflex_enable(reflex_find_by_name(\"group\", \"snb group\", false, false, \"knlc\"))\n        set_variable(\"lcLightAttack\", \"lcLongswordSlice\")\n    \tset_variable(\"lcHeavyAttack\", \"lcLongswordRend\")\n    \tif ((get_variable(\"lcLongswordSlice\") == undefined) || (get_variable(\"lcLongswordRend\") == undefined) || (get_variable(\"lcBroadswordSlice\") == undefined) || (get_variable(\"lcBroadswordRend\") == undefined) || (client.limbcount.isInstalling == true)) {\n    \t\tset_variable(\"lcLongswordSlice\", client.limbcount.damageTable[\"longswordSlice\"])\n    \t\tset_variable(\"lcLongswordRend\", client.limbcount.damageTable[\"longswordRend\"])\n    \t\tset_variable(\"lcBroadswordSlice\", client.limbcount.damageTable[\"broadswordSlice\"])\n    \t\tset_variable(\"lcBroadswordRend\", client.limbcount.damageTable[\"broadswordRend\"]) \n        }\n        display_notice(\"(knlc): SNB runewarden enabled\", \"green\")\n        set_variable(\"breakpoint default\", 11)\n    }\n    else if (get_value(\"lcKnightspec\") == \"2h\"){\n        reflex_enable(reflex_find_by_name(\"group\", \"2h group\", false, false, \"knlc\"))\n        display_notice(\"(knlc): 2H runewarden enabled\", \"green\")\n        set_variable(\"breakpoint default\", 6)\n    }  \n}\nelse if (lcClass == \"sentinel\"){\n    display_notice(\"(knlc): KNLC is not configured for this class, it'll keep out of the way while you're in it\", \"green\")\n}\nelse if (lcClass == \"serpent\"){\n    display_notice(\"(knlc): KNLC is not configured for this class, it'll keep out of the way while you're in it\", \"green\")\n}\nelse if (lcClass == \"shaman\"){\n    display_notice(\"(knlc): KNLC is not configured for this class, it'll keep out of the way while you're in it\", \"green\")\n}\nelse if (lcClass == \"sylvan\"){\n    display_notice(\"(knlc): KNLC is not configured for this class, it'll keep out of the way while you're in it\", \"green\")\n}\nelse {\n    display_notice(\"Something went wrong, please re-enter your class\", \"green\")\n}\n\nif (client.limbcount.isInstalling == true){\n    \n"},{"type":"trigger","name":"lc detect class","enabled":false,"id":40,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You are a member of the (.*) class","actions":[{"action":"script","script":"\ngag_current_line()\nset_variable(\"lcClass\", args[1].toLowerCase())\nclient.print(\"(knlc): Class detected as \" + args[1].toLowerCase(), \"green\") \nreflex_disable(reflex_find_by_name(\"trigger\", \"lc detect class\", false, false, \"knlc\"))\nreflex_disable(reflex_find_by_name(\"trigger\", \"lc detect dragon\", false, false, \"knlc\"))\nif ((args[1] == \"Runewarden\") || (args[1] == \"Paladin\") || (args[1] == \"Infernal\")) {\ndisplay_notice(\"Please enter your current weaponmastery specialization, with LCONFIG KNIGHTSPEC SNB/DWC/DWB/2H (Examples: LCONFIG KNIGHTSPEC DWC or LCONFIG KNIGHTSPEC 2H). Note: The command must be entered in all lowercase\", \"green\")\n}\nelse {\n    run_function(\"lcClassSetup\", \" \", \"knlc\")\n}"}]},{"type":"trigger","name":"lc detect dragon","enabled":false,"id":41,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"You are a mighty (.*) Dragon","actions":[{"action":"script","script":"gag_current_line()\nset_variable(\"lcClass\", \"dragon\")\ndisplay_notice(\"(knlc): Please enter your current lesserform class, with LCONFIG LESSERFORM <your class> (Examples: LCONFIG LESSERFORM RUNEWARDEN or LCONFIG LESSERFORM MONK). Note: The command must be entered in all lowercase\", \"green\")\nreflex_disable(reflex_find_by_name(\"trigger\", \"lc detect class\", false, false, \"knlc\"))\nreflex_disable(reflex_find_by_name(\"trigger\", \"lc detect dragon\", false, false, \"knlc\"))\n"}]},{"type":"alias","name":"lc lesserform select","enabled":true,"id":42,"matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"set_variable(\"lcLesserform\", args[1])\ndisplay_notice(\"(knlc): Lesserform class set to \" + args[1], \"green\")\n\n\nif ((args[1] == \"runewarden\") || (args[1] == \"paladin\") || (args[1] == \"infernal\") {\ndisplay_notice(\"Please enter your current weaponmastery specialization, with LCONFIG KNIGHTSPEC SNB/DWC/DWB/2H (Examples: LCONFIG KNIGHTSPEC DWC or LCONFIG KNIGHTSPEC 2H). Note: The command must be entered in all lowercase\", \"green\")\n}\nelse {\n    run_function(\"lcClassSetup\", \" \", \"knlc\")\n}"}],"text":"^lconfig lesserform (alchemist|apostate|bard|blademaster|depthswalker|druid|infernal|jester|magi|monk|occultist|paladin|priest|runewarden|sentinel|serpent|shaman|sylvan)$"},{"type":"alias","name":"lc knight specialization","enabled":true,"id":43,"matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"set_variable(\"lcKnightspec\", args[1])\ndisplay_notice(\"(knlc): Weaponmastery specialization set as \" + get_variable(\"lcKnightspec\"))\nrun_function(\"lcClassSetup\", \" \", \"knlc\")"}],"text":"^lconfig knightspec (snb|dwc|2h|dwb)$"},{"type":"trigger","name":"whyyyy","enabled":false,"id":44,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"You are a member of the Monk class","actions":[{"action":"script","script":"client.print(\"matched\")"}]},{"type":"alias","name":"v","enabled":true,"id":47,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"client.print(get_variable(\"lcLightAttack\"))\n\nif (get_variable(\"lcLightAttack\") == undefined) {\n    client.print(\"ping\")\n}"}],"text":"vtest"},{"type":"trigger","name":"lc assess","enabled":true,"id":51,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"You glance over (.*) and see that (his|her) health is at (\\d+)/(\\d+)","actions":[{"action":"script","script":"client.print(\"assess matched\")\nclient.print(matches[3])"}]}]}];
client.reflexes_fix_parents();
client.reflexes_convert();


// +++++ BUTTONS +++++ //
 client.buttons = [];
 client.bottom_buttons_set_count(6);
client.load_all_reflex_packages();


// +++++ LAYOUT INFO +++++ //
client.display_tabs = client.unstringify_display_tabs ? client.unstringify_display_tabs({"el_version":8,"container_1":["map"],"container_2":["affdef","skills","inventory"],"container_3":["room","who"],"container_4":["tasks","all_comm","quests"],"main_container":["main_output"],"floaters":{},"channel_windows":[],"disabled_central":[]}) : undefined;

