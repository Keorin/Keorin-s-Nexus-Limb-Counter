{"name":"knlc","enabled":true,"description":"Nexus Limb Counter. LINSTALL to get started, and check the readme in the reflexes section!","type":"group","id":1,"items":[{"type":"function","name":"READ ME!","enabled":true,"id":95,"code":"/*\nThanks for trying out this limb counter for nexus! This counter is designed to be as easy to pick up as possible for beginners, while putting many of its functions in as simplified variables for ease of editing for people who know what they're doing. This readme is a quick overview of how to work it, and I highly suggest you read through it for the best experience.\n\n\n\nInstalling and Configuring:\n\n\"lcinstall\"     Starts installing the counter, setting some necessary variables and the like. You should only have to do this once, though you can enter it again to reset things if something gets messed up. Just follow the instructions that'll come up.\n\n\"lconfig knightspec (snb|dwb|dwc|2h)\"    For knights only, this'll tell the system what specialization you currently are. If you need to change specializations, you just need to send the command again with the new one.\n\n\"lconfig lesserform (class)\"     If you start installing while dragonformed, the system will need to know what your -current- lesserformed class is. It'll be able to handle switching between dragon and lesserform classes, after that.\n\n\"lconfig display (verboseprompt|briefprompt|afterprompt|none)\"      This command will set which display mode you use, or change it if entered outside installation. The options look something like this:\n\nNOTE: the regex capture group for prompt detection (lcPrompt) is (\\d+)h(.*)(\\d+)m(.*) this means that if you have a prompt that doesn't start with something like \"####h, ####m,\", it may cause problems. \n\nverboseprompt:\n\n3500h, 3977m, 16680e, 20222w ex|LL:0|RL:0|LA:0|RA:0|T:0|H:0|10|\n\nbriefprompt: \n\n3500h, 3977m, 16590e, 20144w ex|0/0|0/0|0/0|10|\n\nafterprompt:\n\n\nYou command the razor-edged thorny vines around you to lash out and rend the right leg of Shirszae.\n3500h, 3977m, 16900e, 20372w ex-\n(knlc): Shirszae's right leg is at 1/10\n\nLL: 0/10 RL: 1/10 LA: 0/10 RA: 0/10 T: 0/10 H: 0/10\n\n(this line will display only after an attack, and will function even if you keep your prompt gagged, unlike the other two)\n\nImportant Aliases:\n\n\n\"shn (person) (#)\"  Tells the limb counter how many hits the target will take to break, so it knows when to reset the count. Unless you think the default is right, you should be doing this for each person you fight. Note that specifying the person is optional, \"shn #\" will set the hits on the last person you attacked or assessed.\n\n\"nn (person) (limb)\"  Tells the limb counter to reset the count on a particular limb, or for all limbs on the person. If entered without specifying a person, it will reset the limb of the last person you hit, and if you enter without specifying a limb, it will reset all limbs\n\n\"lshow\"   This will display the target's current limb damage, particularly useful if you don't have a display on your prompt\n\n\nOn counting and displaying:\n\nThis counter is designed to allow for the use of multiple weapon types at once, so that knights (and other classes) can prep however they want, and have the limb counter not get thrown off. Each weapon and attack has been tested for accurate damage ratios, so you should be able to pull out your weapons and start hitting, though the individual attack damages are stored in simplified variables to make them easy to chance (you'll have to if you have artifacts, for instance).\n\nTo make it easier to use multiple damage types, this counter will display two levels of prep. A number will turn ORANGE if the target's within range where a class' more damaging attack or weapon will break on the next hit (i.e. a dwb knight's flail hit, a snb knight's rend, or a magi's non-air staffstrike). The damage will turn RED when the limb is at the range where the weaker attack will be able to break (such as a dwb knight's morningstar hit, an snb knight's slice, or a magi's air strike). The idea here is to make it easier to not break a limb accidentally while using a mixture of attacks, and to be able to know when it's possible to break with the right attack. If you disagree on which attacks have been assigned to the heavier and lighter attacks, you can change the lcLightAttack and lcHeavyAttack variables in the simplified scripting system. Simply change the value with one of the other attacks that have damage variables assigned to them, and the system should work out the rest.\n\nIf you have any questions or find any bugs, please send an OOC message to Keorin, and I'll see what I can do to help!\n"},{"type":"function","name":"lcHit","enabled":true,"id":2,"code":"//parseFloat(client.limbcount[person][location].toFixed(1))\nvar person = get_variable(\"lcTarget\")\nvar location = get_variable(\"lcLimb\")\nvar damage = get_variable(\"lcDamage\")\n\n\nif (client.limbcount == null) {\n    run_function(\"lcLogin\", \"\", \"knlc\")\n};\n\nif (client.limbcount[person] == null) {\n    client.limbcount[person] = {\"head\":0, \"torso\":0, \"right arm\":0, \"left arm\":0, \"right leg\":0, \"left leg\":0, \"breakpoint\":get_variable(\"breakpoint default\"), \"head_colour\":\"green\", \"head_colour\":\"green\", \"torso_colour\":\"green\", \"right arm_colour\":\"green\", \"left arm_colour\":\"green\", \"right leg_colour\":\"green\", \"left leg_colour\":\"green\"}\n};\n\nset_variable(\"lastHit\", person)\n\nif (client.recentBreak[location] != true) { \nclient.limbcount[person][location] += damage\n}\n\nvar lcDisplayRaw = get_variable(\"lcDisplayList\")\nif ((get_variable(\"lcWillDisplay\") == false) || (lcDisplayRaw == undefined)) {\n    var displayList = []\n    }\nelse {\n    var displayList = lcDisplayRaw.split(\",\")\n}\n\nif (client.limbcount[person][location] >= client.limbcount[person][\"breakpoint\"]) {\n    client.limbcount[person][location] = 0\n    client.recentBreak[location] = true\n    displayList.push(\"red\")\n    displayList.push(\"(knlc):\" + person + \"'s \" + location + \" BROKE\")\n\n    setTimeout(function () { \n    \tclient.recentBreak[location] = false \n\t}, 100);\n    client.limbcount[person][location + \"_colour\"] = \"green\"\n}\nelse if ((client.limbcount[person][\"breakpoint\"] - client.limbcount[person][location]) <= get_variable(get_variable(\"lcLightAttack\"))){\n    displayList.push(\"red\")\n    client.limbcount[person][location + \"_colour\"] = \"red\"\n    displayList.push(\"(knlc): \" + person + \"'s \" + location + \" is at \" + parseFloat(client.limbcount[person][location].toFixed(2)) + \"/\" + client.limbcount[person][\"breakpoint\"])\n}\nelse if ((client.limbcount[person][\"breakpoint\"] - client.limbcount[person][location]) <= get_variable(get_variable(\"lcHeavyAttack\"))) {\n    client.limbcount[person][location + \"_colour\"] = \"orange\"\n    displayList.push(\"orange\")\n    displayList.push(\"(knlc): \" + person + \"'s \" + location + \" is at \" + parseFloat(client.limbcount[person][location].toFixed(2)) + \"/\" + client.limbcount[person][\"breakpoint\"])\n\n}\nelse {\n    displayList.push(\"green\")\n    displayList.push(\"(knlc): \" + person + \"'s \" + location + \" is at \" + parseFloat(client.limbcount[person][location].toFixed(2)) + \"/\" + client.limbcount[person][\"breakpoint\"])\n    client.limbcount[person][location + \"_colour\"] = \"green\"\n\n}\n\n\tset_variable(\"lcDisplayList\", displayList.toString())\n    set_variable(\"lcWillDisplay\", true)\n\n\nclient.lcResetTimer(person, location)\n//}","items":[]},{"type":"function","name":"lcResetTimer","enabled":true,"id":3,"code":"client.lcResetTimer = function lcResetTimer(person, location){\n\n    if (client.limbcount[person][location + \"_timer\"] != null) {\n    \tclearTimeout(client.limbcount[person][location + \"_timer\"])\n\t};\n\n\tclient.limbcount[person][location + \"_timer\"] = setTimeout(function () { \n    \t//display_notice(person + \"'s \" + location.toUpperCase() + \" has been reset\") \n        client.lcReset(person, location)\n\t}, 180000);\n}","items":[]},{"type":"function","name":"lcReset","enabled":true,"id":4,"code":"client.lcReset = function lcReset(person, location){\n    \n    var limb = location\n\n\n\tif (location == \"all\"){\n    \tvar oldBreakpoint = client.limbcount[person][\"breakpoint\"]\n    \tclient.limbcount[person] = {\"head\":0, \"torso\":0, \"right arm\":0, \"left arm\":0, \"right leg\":0, \"left leg\":0, \"breakpoint\":get_variable(\"breakpoint default\"), \"head_colour\":\"green\", \"head_colour\":\"green\", \"torso_colour\":\"green\", \"right arm_colour\":\"green\", \"left arm_colour\":\"green\", \"right leg_colour\":\"green\", \"left leg_colour\":\"green\"}\n        display_notice(\"(knlc):\" + person + \" has been reset\", \"red\", \"white\")       \n\t}\n\telse {\n        client.limbcount[person][location] = 0\n        display_notice(\"(knlc):\" + person + \"'s \" + limb.toUpperCase() + \" has been reset\", \"red\", \"white\") \n        client.limbcount[person][location + \"_colour\"] = \"green\"\n        display_notice(\"(knlc):\" + person + \"'s \" + location + \" is at \" + client.limbcount[person][location] + \"/\" + client.limbcount[person][\"breakpoint\"], \"green\");\n    }\n}","items":[]},{"type":"function","name":"lcDisplay","enabled":true,"id":5,"code":"client.lcDisplay = function lcDisplay(){\n    var person = client.lastHit\n    for (i = 0; i < client.displayList.length; i++){\n        display_notice(client.displayList[i])\n    }\n    //client.print(\"LL: \" + client.limbcount[person][\"left leg\"] + \"/\" + client.limbcount[person][\"breakpoint\"] + \" RL: \" + client.limbcount[person][\"right leg\"] + \"/\" + client.limbcount[person][\"breakpoint\"] + \" LA: \" + client.limbcount[person][\"left arm\"] + \"/\" + client.limbcount[person][\"breakpoint\"] + \" RA: \" + client.limbcount[person][\"right arm\"] + \"/\" + client.limbcount[person][\"breakpoint\"] + \" T: \" +  client.limbcount[person][\"torso\"] + \"/\" + client.limbcount[person][\"breakpoint\"] + \" H: \" + client.limbcount[person][\"head\"] + \"/\" + client.limbcount[person][\"breakpoint\"])\n    client.displayList = []\n}","items":[]},{"type":"trigger","name":"lcPrompt","enabled":true,"id":6,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"(\\d+)h(.*)(\\d+)m(.*)","actions":[{"action":"script","script":"if (get_variable(\"hitAttempted\") == true){\n    set_variable(\"hitAttempted\", false)\n    if (get_variable(\"hitFailed\") == false) {\n        run_function(\"lcHit\", \"\", \"knlc\")\n        if (get_variable(\"lcSecondHit\") == true) {\n            set_variable(\"lcSecondHit\", false)\n            set_variable(\"lcLimb\", get_variable(\"lcSecondLimb\"))\n            set_variable(\"lcDamage\", get_variable(\"lcSecondDamage\"))\n            run_function(\"lcHit\", \"\", \"knlc\")\n        }\n\t}\n}\n/*set_variable(\"lcSecondHit\", true)\nif (args[1] == \"left\") {\nset_variable(\"lcSecondLimb\", \"right leg\")\n}\nelse if (args[1] == \"right\") {\n    set_variable(\"lcSecondLimb\", \"left leg\")\n}\nset_variable(\"lcSecondDamage\", get_variable(\"lcOffSlash\"))\n*/\nif (get_variable(\"lcWillDisplay\") == true){\n    if (get_variable(\"lcDisplay\") == \"afterprompt\") {\n        run_function(\"lcAfterpromptDisplay\", \" \", \"KNLC\")\n    }\n    var lcDisplayRaw = get_variable(\"lcDisplayList\")\n    var displayList = lcDisplayRaw.split(\",\")\n    var person = get_variable(\"lastHit\")\n    for (i = (displayList.length - 1); i > -1; i -= 2){\n        display_notice(displayList[i], displayList[i-1])\n    }\n    set_variable(\"lcDisplayList\", 0)\n    set_variable(\"lcWillDisplay\", false)\n}\n\n\n\n"}],"items":[]},{"type":"group","name":"aliases","enabled":true,"id":121,"items":[{"type":"alias","name":"lc toggle break point guessing","enabled":true,"id":91,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (args[1] == \"on\") {\n    set_variable(\"lcGuessOnAssess\", \"on\")\n    display_notice(\"(knlc): Will guess break points on assess\", \"green\")\n}\nelse if (args[1] == \"off\") {\n    set_variable(\"lcGuessOnAssess\", \"off\")\n    display_notice(\"(knlc): Won't guess break points anymore\", \"green\")    \n}\nelse if (args[1] == undefined) {\n    if (get_variable(\"lcGuessOnAssess\") == \"on\") {\n    \tset_variable(\"lcGuessOnAssess\", \"off\")\n    \tdisplay_notice(\"(knlc): Won't guess break points anymore\", \"green\")\n    }\n    else if (get_variable(\"lcGuessOnAssess\") == \"off\") {\n        set_variable(\"lcGuessOnAssess\", \"on\")\n    \tdisplay_notice(\"(knlc): Will guess break points on assess\", \"green\")\n    }\n}"}],"text":"^lconfig assessguess ?(on|off)?"},{"type":"alias","name":"lc show limb damage","enabled":true,"id":90,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var person = get_variable(\"lastHit\")\n\nclient.print(\"(knlc): Displaying \" + person + \"'s limb damage:\", \"green\")\n\n\n        var headColoured = parseFloat(client.limbcount[person][\"head\"].toFixed(1)).toString().fontcolor(client.limbcount[person][\"head_colour\"])\n        var torsoColored = parseFloat(client.limbcount[person][\"torso\"].toFixed(1)).toString().fontcolor(client.limbcount[person][\"torso_colour\"])\n        var rightArmColoured = parseFloat(client.limbcount[person][\"right arm\"].toFixed(1)).toString().fontcolor(client.limbcount[person][\"right arm_colour\"])\n        var leftArmColoured = parseFloat(client.limbcount[person][\"left arm\"].toFixed(1)).toString().fontcolor(client.limbcount[person][\"left arm_colour\"])\n        var rightLegColoured = parseFloat(client.limbcount[person][\"right leg\"].toFixed(1)).toString().fontcolor(client.limbcount[person][\"right leg_colour\"])\n        var leftLegColoured = parseFloat(client.limbcount[person][\"left leg\"].toFixed(1)).toString().fontcolor(client.limbcount[person][\"left leg_colour\"])\n    \tclient.print(\"LL: \" + leftLegColoured + \"/\" + client.limbcount[person][\"breakpoint\"] + \" RL: \" + rightLegColoured + \"/\" + client.limbcount[person][\"breakpoint\"] + \" LA: \" + leftArmColoured + \"/\" + client.limbcount[person][\"breakpoint\"] + \" RA: \" + rightArmColoured + \"/\" + client.limbcount[person][\"breakpoint\"] + \" T: \" +  torsoColored + \"/\" + client.limbcount[person][\"breakpoint\"] + \" H: \" + headColoured + \"/\" + client.limbcount[person][\"breakpoint\"])"}],"text":"^lshow$"},{"type":"alias","name":"lc reset limb","enabled":true,"id":9,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var person = \"\"\nvar limb = \"\"\nlimbConversionTable = {rl:\"right leg\", ll:\"left leg\", ra:\"right arm\", la:\"left arm\", t:\"torso\", h:\"head\", \"right leg\":\"right leg\", \"left leg\":\"left leg\", \"right arm\":\"right arm\", \"left arm\":\"left arm\", \"torso\":\"torso\", \"head\":\"head\", \"all\":\"all\"}\n\nif (args[2] == undefined){\n\tif ((args[1] == \"rl\") || (args[1] == \"ra\") || (args[1] == \"ll\") || (args[1] == \"la\") || (args[1] == \"h\") || (args[1] == \"t\") || (args[1] == \"all\")){\n        limb = args[1]\n    \tperson = get_variable(\"lastHit\")\n    }\n   \telse if (args[1] != undefined) {\n        limb = \"all\"\n        person = args[1].charAt(0).toUpperCase() + args[1].slice(1)  \n    }\n    else {\n        limb = \"all\"\n        person = get_variable(\"lastHit\")\n    }       \n}\nelse {\n    person = args[1]\n    limb = args[2]\n}\n \nlcReset(person, limbConversionTable[limb] );"}],"text":"^nn ?(\\w+)? ?(rl|ll|ra|la|t|h|all)?$","items":[]},{"type":"alias","name":"lc set hits needed","enabled":true,"id":10,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"var person = \"\"\nvar hitsNeeded = \"\"\n\nif (args[1] == undefined){\n    //client.print(get_variable(\"lastHit\"))\n    person = get_variable(\"lastHit\")\n    hitsNeeded = args[2]\n}\nelse{ \n     person = args[1].charAt(0).toUpperCase() + args[1].slice(1);\n    hitsNeeded = args[2]    \n}\n\nif (client.limbcount[person] == null) {\n    client.limbcount[person] = {\"head\":0, \"torso\":0, \"right arm\":0, \"left arm\":0, \"right leg\":0, \"left leg\":0, \"breakpoint\":client.breakPointDefault}\n};\n\nclient.limbcount[person][\"breakpoint\"] = to_number(hitsNeeded)\nclient.print(\"(KNLC): \" +  person + \"'s break point set at \" + client.limbcount[person][\"breakpoint\"], \"green\")"}],"text":"^shn ([A-z]+)? ?([\\d.]+)$","items":[]}],"actions":[]},{"type":"group","name":"lc hit detection","enabled":true,"id":12,"items":[{"type":"trigger","name":"dodged 1","enabled":true,"id":15,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^(\\w+) dodges nimbly out of the way","actions":[{"action":"script","script":"set_variable(\"hitFailed\", true)"}],"items":[]},{"type":"trigger","name":"dodged 2","enabled":true,"id":16,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^(\\w+) twists (his|her) body out of harm's way","actions":[{"action":"script","script":"set_variable(\"hitFailed\", true)"}],"items":[]},{"type":"trigger","name":"dodged 3","enabled":true,"id":17,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^(\\w+) quickly jumps back, avoiding the attack","actions":[{"action":"script","script":"set_variable(\"hitFailed\", true)"}],"items":[]},{"type":"trigger","name":"missed","enabled":true,"id":18,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You lash out at (\\w+) with (.*), but miss","actions":[{"action":"script","script":"set_variable(\"hitFailed\", true)"}],"items":[]},{"type":"trigger","name":"rebounding","enabled":true,"id":19,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^The attack rebounds (back)? onto you","actions":[{"action":"script","script":"set_variable(\"hitFailed\", true)"}],"items":[]},{"type":"trigger","name":"reflection","enabled":true,"id":20,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^A reflection of (\\w+) blinks out of existence","actions":[{"action":"script","script":"set_variable(\"hitFailed\", true)"}],"items":[]},{"type":"trigger","name":"parried 1","enabled":true,"id":21,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^(\\w+) parries the attack with a deft manoeuvre","actions":[{"action":"script","script":"set_variable(\"hitFailed\", true)\n"}],"items":[]},{"type":"trigger","name":"parried 2","enabled":true,"id":22,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^(\\w+) fumbles (his|her) parry, clumsily redirecting your attack","actions":[{"action":"script","script":"set_variable(\"hitFailed\", true)"}],"items":[]},{"type":"trigger","name":"guarded 1","enabled":true,"id":23,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^(\\d+) moves into your attack, knocking your blow aside before viciously countering with a strike to your head","actions":[{"action":"script","script":"set_variable(\"hitFailed\", true)"}],"items":[]},{"type":"trigger","name":"guarded 2","enabled":true,"id":24,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^(\\d+) steps into the attack, grabs your arm, and throws you violently to the ground","actions":[{"action":"script","script":"set_variable(\"hitFailed\", true)"}],"items":[]}],"actions":[]},{"type":"group","name":"monk group","enabled":true,"id":13,"items":[{"type":"trigger","name":"Hammerfist","enabled":true,"id":77,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You ball up one fist and hammerfist (\\w+)\\.$","actions":[{"action":"script","script":"set_variable(\"monkHitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"lcTarget\", args[1])\nset_variable(\"lcDamage\", get_variable(\"lcPunch\"))"}]},{"type":"trigger","name":"Spear","enabled":true,"id":78,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You form a spear hand and stab out towards (\\w+)\\.$","actions":[{"action":"script","script":"set_variable(\"monkHitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"lcTarget\", args[1])\nset_variable(\"lcDamage\", get_variable(\"lcPunch\"))"}]},{"type":"trigger","name":"Hook","enabled":true,"id":79,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You unleash a powerful hook towards (\\w+)\\.$","actions":[{"action":"script","script":"set_variable(\"monkHitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"lcTarget\", args[1])\nset_variable(\"lcDamage\", get_variable(\"lcPunch\"))"}]},{"type":"trigger","name":"Uppercut","enabled":true,"id":80,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You launch a powerful uppercut at (\\w+)\\.$","actions":[{"action":"script","script":"set_variable(\"monkHitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"lcTarget\", args[1])\nset_variable(\"lcDamage\", get_variable(\"lcUppercut\"))"}]},{"type":"trigger","name":"Snapkick","enabled":true,"id":81,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You let fly at (\\w+) with a snap kick\\.$","actions":[{"action":"script","script":"set_variable(\"monkHitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"lcTarget\", args[1])\nset_variable(\"lcDamage\", get_variable(\"lcKick\"))"}]},{"type":"trigger","name":"Moonkick","enabled":true,"id":82,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You hurl yourself towards (\\w+) with a lightning\\-fast moon kick\\.$","actions":[{"action":"script","script":"set_variable(\"monkHitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"lcTarget\", args[1])\nset_variable(\"lcDamage\", get_variable(\"lcKick\"))"}]},{"type":"trigger","name":"Sidekick","enabled":true,"id":83,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You pump out at (\\w+) with a powerful side kick\\.$","actions":[{"action":"script","script":"set_variable(\"monkHitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"lcTarget\", args[1])\nset_variable(\"lcDamage\", get_variable(\"lcSidekick\"))"}]},{"type":"trigger","name":"Whirlwind","enabled":true,"id":84,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You spin into the air and throw a whirlwind kick towards (\\w+)\\.$","actions":[{"action":"script","script":"set_variable(\"monkHitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"lcTarget\", args[1])\nset_variable(\"lcLimb\", \"left leg\")\nset_variable(\"lcDamage\", get_variable(\"lcKick\"))"}]},{"type":"trigger","name":"monk hit connected","enabled":true,"id":86,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You connect to the (.*?)!$","actions":[{"action":"script","script":"if (get_variable(\"monkHitAttempted\") == true){\n    set_variable(\"monkHitAttempted\", false)\n        if (get_variable(\"hitFailed\") == false) {\n        set_variable(\"lcLimb\", args[1])\n        run_function(\"lcHit\", \"\", \"knlc\")\n\t}\n}"}]},{"type":"trigger","name":"axekick","enabled":true,"id":94,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^You kick your leg high and scythe downwards at (\\w+)\\.","actions":[{"action":"script","script":"set_variable(\"monkHitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"lcTarget\", args[1]\nset_variable(\"lcDamage\", 50)"}]}],"actions":[]},{"type":"group","name":"blademaster group","enabled":false,"id":111,"items":[{"type":"trigger","name":"Arash","enabled":true,"id":110,"matching":"substring","whole_words":true,"case_sensitive":true,"text":"Mind set on the dancing flame, you take up the Arash stance.","actions":[{"action":"script","script":"client.limbcount.stanceModifier = get_variable(\"lcArashModifier\")\nclient.print(\"(knlc): Stance changed to Arash\")"}]},{"type":"trigger","name":"Doya","enabled":true,"id":112,"matching":"substring","whole_words":true,"case_sensitive":true,"text":"Lowering your centre of gravity, you drop into the Doya stance.","actions":[{"action":"script","script":"client.limbcount.stanceModifier = get_variable(\"lcDoyaModifier\")\nclient.print(\"(knlc): Stance changed to Doya\")"}]},{"type":"trigger","name":"no stance","enabled":true,"id":113,"matching":"substring","whole_words":true,"case_sensitive":true,"text":"You adopt a neutral stance.","actions":[{"action":"script","script":"client.limbcount.stanceModifier = get_variable(\"lcUnstancedModifier\")\nclient.print(\"(knlc): Stance changed to Unstanced\")"}]},{"type":"trigger","name":"Sanya","enabled":true,"id":114,"matching":"substring","whole_words":true,"case_sensitive":true,"text":"Clearing your mind, you sink into the Sanya stance.","actions":[{"action":"script","script":"client.limbcount.stanceModifier = get_variable(\"lcSanyaModifier\")\nclient.print(\"(knlc): Stance changed to Sanya\")"}]},{"type":"trigger","name":"Thyr","enabled":true,"id":115,"matching":"substring","whole_words":true,"case_sensitive":true,"text":"Readying yourself with a flourish, you flow into the Thyr stance.","actions":[{"action":"script","script":"client.limbcount.stanceModifier = get_variable(\"lcThyrModifier\")\nclient.print(\"(knlc): Stance changed to Thyr\")"}]},{"type":"trigger","name":"Mir","enabled":true,"id":116,"matching":"substring","whole_words":true,"case_sensitive":true,"text":"Resolving to move as water, you enter the Mir stance.","actions":[{"action":"script","script":"client.limbcount.stanceModifier = get_variable(\"lcMirModifier\")\nclient.print(\"(knlc): Stance changed to Mir\")"}]},{"type":"trigger","name":"legslash","enabled":true,"id":117,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^With a smooth lunge to the (left|right), you draw (.*?) from its scabbard and deliver a powerful slash across (\\w+)'s legs\\.","actions":[{"action":"script","script":"set_variable(\"hitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"lcTarget\", args[3])\nset_variable(\"lcLimb\", args[1] + \" leg\")\nset_variable(\"lcDamage\", (get_variable(\"lcMainSlash\") * client.limbcount.stanceModifier))\nset_variable(\"lcSecondHit\", true)\nif (args[1] == \"left\") {\nset_variable(\"lcSecondLimb\", \"right leg\")\n}\nelse if (args[1] == \"right\") {\n    set_variable(\"lcSecondLimb\", \"left leg\")\n}\nset_variable(\"lcSecondDamage\", (get_variable(\"lcOffSlash\") * client.limbcount.stanceModifier))"}]},{"type":"trigger","name":"armslash","enabled":true,"id":118,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^Spinning to the (left|right) as you draw (.*?) from its sheath, you unleash a precise slash across (\\w+)'s arms\\.","actions":[{"action":"script","script":"set_variable(\"hitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"lcTarget\", args[3])\nset_variable(\"lcLimb\", args[1] + \" arm\")\nset_variable(\"lcDamage\", (get_variable(\"lcMainSlash\") * client.limbcount.stanceModifier))\nset_variable(\"lcSecondHit\", true)\nif (args[1] == \"left\") {\nset_variable(\"lcSecondLimb\", \"right arm\")\n}\nelse if (args[1] == \"right\") {\n    set_variable(\"lcSecondLimb\", \"left arm\")\n}\nset_variable(\"lcSecondDamage\", (get_variable(\"lcOffSlash\") * client.limbcount.stanceModifier))"}]},{"type":"trigger","name":"centreslash","enabled":true,"id":119,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^In a single motion, you draw (.*) from its scabbard and loose a vicious (rising|falling) slash at (\\w+)'s (torso|head)\\.","actions":[{"action":"script","script":"set_variable(\"hitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"lcTarget\", args[3])\nset_variable(\"lcLimb\", args[4])\nset_variable(\"lcDamage\", (get_variable(\"lcMainSlash\") * client.limbcount.stanceModifier))\nset_variable(\"lcSecondHit\", true)\nif (args[4] == \"head\") {\nset_variable(\"lcSecondLimb\", \"torso\")\n}\nelse if (args[1] == \"torso\") {\n    set_variable(\"lcSecondLimb\", \"head\")\n}\nset_variable(\"lcSecondDamage\", (get_variable(\"lcOffSlash\") * client.limbcount.stanceModifier))"}]},{"type":"trigger","name":"compass slash","enabled":true,"id":120,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^Whispering a prayer to the (.*?) winds, you draw (.*?) and unleash a slash towards (\\w+)'s (left leg|right leg|left arm|right arm|head|torso)\\.","actions":[{"action":"script","script":"set_variable(\"hitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"lcTarget\", args[3])\nset_variable(\"lcLimb\", args[4])\nset_variable(\"lcDamage\", (get_variable(\"lcCompassSlash\") * client.limbcount.stanceModifier))"}]}],"actions":[]},{"type":"group","name":"magi group","enabled":false,"id":39,"items":[{"type":"trigger","name":"staffstrike","enabled":true,"id":64,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You call upon (.*?) and unleash a forceful blow towards (\\w+)'s (.*?) with your trusty staff\\.","actions":[{"action":"script","script":"set_variable(\"hitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"lcTarget\", args[2])\nset_variable(\"lcLimb\", args[3])\nif (args[1] == \"Whiirh\") {\n\tset_variable(\"lcDamage\", get_variable(\"lcStaffstrikeAir\"))\n}\nelse {\n    set_variable(\"lcDamage\", get_variable(\"lcStaffstrikeOther\"))\n}"}]}],"actions":[]},{"type":"group","name":"sylvan group","enabled":false,"id":104,"items":[{"type":"trigger","name":"thornrend","enabled":true,"id":105,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You command the razor-edged thorny vines around you to lash out and rend the (.*?) of (\\w+)\\.","actions":[{"action":"script","script":"set_variable(\"hitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"lcTarget\", args[2])\nset_variable(\"lcLimb\", args[1])\nif ((client.limbcount[args[2]] != undefined) && (client.limbcount[args[2]][\"vinewreathed\"] == true)) {\n\tset_variable(\"lcDamage\", get_variable(\"lcVinewreathedThornrend\"))\n}\nelse {\n    set_variable(\"lcDamage\", get_variable(\"lcThornrend\"))\n}"}]},{"type":"trigger","name":"vinewreath","enabled":true,"id":106,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"Uttering a quiet recitation, you gesture towards (.*). A mass of writhing vines burst forth from the ground, grabbing hold of (.*) form.","actions":[{"action":"script","script":"client.limbcount[args[1]][\"vinewreathed\"] = true\n\n\nif (client.limbcount[args[1]][\"vinewreathed_timer\"] != null) {\n    \tclearTimeout(client.limbcount[args[1]][\"vinewreathed_timer\"])\n};\n\n\tclient.limbcount[args[1]][\"vinewreathed_timer\"] = setTimeout(function () { \n        client.limbcount[args[1]][\"vinewreathed\"] = false\n\t}, 20000);\n"}]}],"actions":[]},{"type":"group","name":"dragon group","enabled":false,"id":46,"items":[{"type":"trigger","name":"dragonrend","enabled":true,"id":57,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^Lunging forward with long, flashing claws extended, you tear into the flesh of (\\w+)'s (.*)\\.","actions":[{"action":"script","script":"set_variable(\"hitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"lcTarget\", args[1])\nset_variable(\"lcLimb\", args[2])\nset_variable(\"lcDamage\", get_variable(\"lcDragonRend\"))"}]}],"actions":[]},{"type":"group","name":"dwb group","enabled":false,"id":45,"items":[{"type":"trigger","name":"flail whirl","enabled":true,"id":53,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You skilfully whirl (.*) toward the (.*) of (\\w+)","actions":[{"action":"script","script":"if (get_variable(\"hitAttempted\") == true){\n    set_variable(\"hitAttempted\", false)\n    if (get_variable(\"hitFailed\") == false) {\n        run_function(\"lcHit\", \" \", \"KNLC\")\n\t}\n}\nset_variable(\"hitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"lcTarget\", args[3])\nset_variable(\"lcLimb\", args[2])\nset_variable(\"lcDamage\", get_variable(\"lcFlailWhirl\"))"}]},{"type":"trigger","name":"morningstar whirl (whip)","enabled":true,"id":58,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You whip (.*) toward the (.*) of (\\w+)","actions":[{"action":"script","script":"if (get_variable(\"hitAttempted\") == true){\n    set_variable(\"hitAttempted\", false)\n    if (get_variable(\"hitFailed\") == false) {\n        run_function(\"lcHit\", \" \", \"KNLC\")\n\t}\n}\nset_variable(\"hitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"lcTarget\", args[3])\nset_variable(\"lcLimb\", args[2])\nset_variable(\"lcDamage\", get_variable(\"lcMorningstarWhirl\"))"}]},{"type":"trigger","name":"morningstar whirl","enabled":true,"id":52,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You skilfully whirl (.*) morningstar toward the (.*) of (\\w+)","actions":[{"action":"script","script":"if (get_variable(\"hitAttempted\") == true){\n    set_variable(\"hitAttempted\", false)\n    if (get_variable(\"hitFailed\") == false) {\n        run_function(\"lcHit\", \" \", \"KNLC\")\n\t}\n}\nset_variable(\"hitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"lcTarget\", args[3])\nset_variable(\"lcLimb\", args[2])\nset_variable(\"lcDamage\", get_variable(\"lcMorningstarWhirl\"))"}]},{"type":"trigger","name":"assault","enabled":true,"id":67,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^Whirling both of your weapons above your head, you unleash a vicious assault at the (.*?) of (\\w+)\\.","actions":[{"action":"script","script":"set_variable(\"hitFailed\", false)\nset_variable(\"lcTarget\", args[2])\nset_variable(\"lcLimb\", args[1])\nset_variable(\"lcDamage\", 50)\nrun_function(\"lcHit\", \" \", \"KNLC\")"}]}],"actions":[]},{"type":"group","name":"dwc group","enabled":false,"id":48,"items":[{"type":"trigger","name":"doubleslash (slash)","enabled":true,"id":59,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^You slash into (\\w+)'s (.*?) with (.*?)\\.","actions":[{"action":"script","script":"if (get_variable(\"hitAttempted\") == true){\n    set_variable(\"hitAttempted\", false)\n    if (get_variable(\"hitFailed\") == false) {\n        run_function(\"lcHit\", \" \", \"KNLC\")\n\t}\n}\nset_variable(\"hitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"razing\", false)\nset_variable(\"lcTarget\", args[1])\nset_variable(\"lcLimb\", args[2])\nif (args[3].indexOf(\"battleaxe\") != -1) {\n\tset_variable(\"lcDamage\", get_variable(\"lcAxeSlash\"))\n}\nelse {\n    set_variable(\"lcDamage\", get_variable(\"lcScimitarSlash\"))\n}\n\n"}]},{"type":"trigger","name":"doubleslash (viciously)","enabled":true,"id":60,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You viciously jab (.*?) into (\\w+)'s (.*?)\\.","actions":[{"action":"script","script":"if (get_variable(\"hitAttempted\") == true){\n    set_variable(\"hitAttempted\", false)\n    if (get_variable(\"hitFailed\") == false) {\n        run_function(\"lcHit\", \" \", \"KNLC\")\n\t}\n}\nset_variable(\"hitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"razing\", false)\nset_variable(\"lcTarget\", args[2])\nset_variable(\"lcLimb\", args[3])\nif (args[1].indexOf(\"battleaxe\") != -1) {\n\tset_variable(\"lcDamage\", get_variable(\"lcAxeSlash\"))\n}\nelse {\n    set_variable(\"lcDamage\", get_variable(\"lcScimitarSlash\"))\n}"}]},{"type":"trigger","name":"doubleslash (swing)","enabled":true,"id":61,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^You swing (.*?) at (\\w+)'s (.*?) with all your might\\.","actions":[{"action":"script","script":"if (get_variable(\"hitAttempted\") == true){\n    set_variable(\"hitAttempted\", false)\n    if (get_variable(\"hitFailed\") == false) {\n        run_function(\"lcHit\", \" \", \"KNLC\")\n\t}\n}\nset_variable(\"hitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"razing\", false)\nset_variable(\"lcTarget\", args[2])\nset_variable(\"lcLimb\", args[3])\nif (args[1].indexOf(\"battleaxe\") != -1) {\n\tset_variable(\"lcDamage\", get_variable(\"lcAxeSlash\"))\n}\nelse {\n    set_variable(\"lcDamage\", get_variable(\"lcScimitarSlash\"))\n}"}]},{"type":"trigger","name":"doubleslash (lightning-quick)","enabled":true,"id":62,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^Lightning-quick, you jab (\\w+)'s (.*?) with (.*?)\\.","actions":[{"action":"script","script":"if (get_variable(\"hitAttempted\") == true){\n    set_variable(\"hitAttempted\", false)\n    if (get_variable(\"hitFailed\") == false) {\n        run_function(\"lcHit\", \" \", \"KNLC\")\n\t}\n}\nset_variable(\"hitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"razing\", false)\nset_variable(\"lcTarget\", args[1])\nset_variable(\"lcLimb\", args[2])\nif (args[3].indexOf(\"battleaxe\") != -1) {\n\tset_variable(\"lcDamage\", get_variable(\"lcAxeSlash\"))\n}\nelse {\n    set_variable(\"lcDamage\", get_variable(\"lcScimitarSlash\"))\n}"}]},{"type":"trigger","name":"undercut","enabled":true,"id":66,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^You swing (.*?) at the (.*?) of (\\w+) with all your might\\.","actions":[{"action":"script","script":"    set_variable(\"hitAttempted\", true)\n\tset_variable(\"hitFailed\", false)\n\tset_variable(\"lcTarget\", args[3])\n\tset_variable(\"lcLimb\", args[2])\n    set_variable(\"lcDamage\", get_variable(\"lcUndercut\"))"}]}],"actions":[]},{"type":"group","name":"snb group","enabled":false,"id":49,"items":[{"type":"trigger","name":"slice","enabled":true,"id":54,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You slice into the (.*) of (\\w+) with (.*) ((longsword)|(broadsword))","actions":[{"action":"script","script":"\nset_variable(\"hitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"lcTarget\", args[2])\nset_variable(\"lcLimb\", args[1])\nif (args[4] == \"broadsword\") {\n    set_variable(\"lcDamage\", get_variable(\"lcBroadswordSlice\"))\n}\nelse {\n    set_variable(\"lcDamage\", get_variable(\"lcLongswordSlice\"))\n}\n"}]},{"type":"trigger","name":"rend","enabled":true,"id":55,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^You carve into (\\w+)'s (.*) with a vicious strike, opening a bleeding wound","actions":[{"action":"script","script":"set_variable(\"hitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"lcTarget\", args[1])\nset_variable(\"lcLimb\", args[2])\nif (get_variable(\"lcWeapon\") == \"broadsword\") {\n    set_variable(\"lcDamage\", get_variable(\"lcBroadswordRend\"))\n}\nelse {\n    set_variable(\"lcDamage\", get_variable(\"lcLongswordRend\"))\n}\n"}]},{"type":"trigger","name":"weapon equip","enabled":true,"id":56,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You begin to wield (.*?) hand","actions":[{"action":"script","script":"\nif (args[1].indexOf(\"broadsword\") != -1) {\n    set_variable(\"lcWeapon\", \"broadsword\")\n}\nelse {\n    set_variable(\"lcWeapon\", \"longsword\")\n}\n    "}]}],"actions":[]},{"type":"group","name":"2h group","enabled":false,"id":50,"items":[{"type":"trigger","name":"hew","enabled":true,"id":63,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^Taking hold of (.*?) with a firm two-handed grip, you hew savagely at (\\w+)'s (.*)\\.","actions":[{"action":"script","script":"set_variable(\"hitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"lcTarget\", args[2])\nset_variable(\"lcLimb\", args[3])\nif (client.limbcount.battlefury == \"precision\") {\nset_variable(\"lcDamage\", (get_variable(\"lcBastardsword\")/2))\n}\nelse {\nset_variable(\"lcDamage\", get_variable(\"lcBastardsword\"))\n}"}]},{"type":"trigger","name":"pulverize","enabled":true,"id":87,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^Throwing your full weight into the motion, you bring (.*?) across in a terrible blow toward (\\w+)'s (.*?)\\.","actions":[{"action":"script","script":"set_variable(\"hitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"lcTarget\", args[2])\nset_variable(\"lcLimb\", args[3])\nif (client.limbcount.battlefury == \"precision\") {\nset_variable(\"lcDamage\", (get_variable(\"lcHammer\")/2))\n}\nelse {\nset_variable(\"lcDamage\", get_variable(\"lcHammer\"))\n}\n"}]},{"type":"trigger","name":"overhand","enabled":true,"id":88,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^Raising (.*?) above your head, you bring it down upon (\\w+)'s head with terrible force\\.","actions":[{"action":"script","script":"set_variable(\"hitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"lcTarget\", args[2])\nset_variable(\"lcLimb\", \"head\")\nif (args[1].indexOf(\"warhammer\") != -1) {\nif (client.limbcount.battlefury == \"precision\") {\nset_variable(\"lcDamage\", (get_variable(\"lcHammer\")/2))\n}\nelse {\nset_variable(\"lcDamage\", get_variable(\"lcHammer\"))\n}\n}\nelse {\nif (client.limbcount.battlefury == \"precision\") {\nset_variable(\"lcDamage\", (get_variable(\"lcBastardsword\")/2))\n}\nelse {\nset_variable(\"lcDamage\", get_variable(\"lcBastardsword\"))\n}\n}\n//"}]},{"type":"trigger","name":"underhand","enabled":true,"id":89,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^Bracing your feet, you lunge upward at (\\w+) with (.*?)\\.","actions":[{"action":"script","script":"set_variable(\"hitAttempted\", true)\nset_variable(\"hitFailed\", false)\nset_variable(\"lcTarget\", args[1])\nset_variable(\"lcLimb\", \"torso\")\nif (args[2].indexOf(\"warhammer\") != -1) {\nif (client.limbcount.battlefury == \"precision\") {\nset_variable(\"lcDamage\", (get_variable(\"lcHammer\")/2))\n}\nelse {\nset_variable(\"lcDamage\", get_variable(\"lcHammer\"))\n}\n}\nelse {\nif (client.limbcount.battlefury == \"precision\") {\nset_variable(\"lcDamage\", (get_variable(\"lcBastardsword\")/2))\n}\nelse {\nset_variable(\"lcDamage\", get_variable(\"lcBastardsword\"))\n}\n}"}]},{"type":"trigger","name":"devastate legs sword","enabled":true,"id":98,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"You whip (.*) in a vicious arc, hewing savagely into the legs of (\\w+)","actions":[{"action":"script","script":"set_variable(\"lcTarget\", args[2])\nset_variable(\"lcLimb\", \"left leg\")\nset_variable(\"lcDamage\", 50)\nrun_function(\"lcHit\", \" \", \"KNLC\")\nset_variable(\"lcLimb\", \"right leg\")\nset_variable(\"lcDamage\", 50)\nrun_function(\"lcHit\", \" \", \"KNLC\")"}]},{"type":"trigger","name":"devastate arms sword","enabled":true,"id":99,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^With a single, terrible blow, you bring (.*) whirling about to cleave into the already injured arms of (\\w+)","actions":[{"action":"script","script":"set_variable(\"lcTarget\", args[2])\nset_variable(\"lcLimb\", \"left arm\")\nset_variable(\"lcDamage\", 50)\nrun_function(\"lcHit\", \" \", \"KNLC\")\nset_variable(\"lcLimb\", \"right arm\")\nset_variable(\"lcDamage\", 50)\nrun_function(\"lcHit\", \" \", \"KNLC\")"}]},{"type":"trigger","name":"devastate legs hammer","enabled":true,"id":100,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^Bringing (.*) around in a savage arc, you viciously pulverise the already injured arms of (\\w+)","actions":[{"action":"script","script":"set_variable(\"lcTarget\", args[2])\nset_variable(\"lcLimb\", \"left arm\")\nset_variable(\"lcDamage\", 50)\nrun_function(\"lcHit\", \" \", \"KNLC\")\nset_variable(\"lcLimb\", \"right arm\")\nset_variable(\"lcDamage\", 50)\nrun_function(\"lcHit\", \" \", \"KNLC\")"}]},{"type":"trigger","name":"devastate arms hammer","enabled":true,"id":101,"matching":"substring","whole_words":true,"case_sensitive":true,"text":"^You direct a devastating two-handed blow with (.*) at the already injured legs of (\\w+)$","actions":[{"action":"script","script":"set_variable(\"lcTarget\", args[2])\nset_variable(\"lcLimb\", \"left leg\")\nset_variable(\"lcDamage\", 50)\nrun_function(\"lcHit\", \" \", \"KNLC\")\nset_variable(\"lcLimb\", \"right leg\")\nset_variable(\"lcDamage\", 50)\nrun_function(\"lcHit\", \" \", \"KNLC\")"}]},{"type":"trigger","name":"devastate sword level 3","enabled":true,"id":102,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"Adjusting your footing, you unleash a horrific slash at the (leg|arm)s of (\\w+), cleaving flesh and shattering bone in a savage display of your supremacy","actions":[{"action":"script","script":"set_variable(\"lcTarget\", args[2])\nset_variable(\"lcLimb\", \"left \" + args[1])\nset_variable(\"lcDamage\", 50)\nrun_function(\"lcHit\", \" \", \"KNLC\")\nset_variable(\"lcLimb\", \"right \" + args[1])\nset_variable(\"lcDamage\", 50)\nrun_function(\"lcHit\", \" \", \"KNLC\")"}]},{"type":"trigger","name":"devastate hammer level 3","enabled":true,"id":103,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"Drawing back (.*), you deliver a single, crippling blow to the (arm|leg)s of (\\w+), mangling bone and meat in a bloody spray","actions":[{"action":"script","script":"set_variable(\"lcTarget\", args[2])\nset_variable(\"lcLimb\", \"left \" + args[1])\nset_variable(\"lcDamage\", 50)\nrun_function(\"lcHit\", \" \", \"KNLC\")\nset_variable(\"lcLimb\", \"right \" + args[1])\nset_variable(\"lcDamage\", 50)\nrun_function(\"lcHit\", \" \", \"KNLC\")"}]},{"type":"trigger","name":"focus precision","enabled":true,"id":107,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"You shift your stance, poising yourself for a precise strike against your foe.","actions":[{"action":"script","script":"//client.print(\"battlefury precision\")\nclient.limbcount.battlefury = \"precision\""}]},{"type":"trigger","name":"battlefury precision cleared","enabled":true,"id":108,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^((Channeling the fury of battle, you prepare to unleash a brutally swift stroke against your foe)|(You may channel the fury of battle once again))","actions":[{"action":"script","script":"client.limbcount.battlefury = \"notprecision\""}]}],"actions":[]},{"type":"group","name":"configuration functions","enabled":true,"id":76,"items":[{"type":"function","name":"lcLogin","enabled":true,"id":36,"code":"display_notice(\"initialized\", \"red\")\nclient.limbcount = {}\nrun_function(\"lcResetTimer\", \" \", \"knlc\")\nrun_function(\"lcReset\", \" \", \"knlc\")\nset_variable(\"lcDisplayList\", \"0\")\nclient.limbcount.stanceModifier = 1.05\nclient.recentBreak = {}\nclient.limbcount[get_variable(\"lastHit\")] = {\"head\":0, \"torso\":0, \"right arm\":0, \"left arm\":0, \"right leg\":0, \"left leg\":0, \"breakpoint\":get_variable(\"breakpoint default\"), \"head_colour\":\"green\", \"head_colour\":\"green\", \"torso_colour\":\"green\", \"right arm_colour\":\"green\", \"left arm_colour\":\"green\", \"right leg_colour\":\"green\", \"left leg_colour\":\"green\"}\n"},{"type":"function","name":"KNLC install","enabled":true,"id":34,"code":"client.limbcount = {}\nset_variable(\"lastHit\", \"keorin\")\nset_variable(\"breakpoint default\", 10)\nset_variable(\"lcDisplayList\", \"0\")\nrun_function(\"lcResetTimer\", \" \", \"KNLC\")\nrun_function(\"lcReset\", \" \", \"KNLC\")\nset_variable(\"lcGuessOnAssess\", \"on\")\nclient.limbcount.isInstalling = true\nclient.recentBreak = {}\nclient.limbcount.diabledClass = false\nclient.limbcount.stanceModifier = 1.05\nset_variable(\"lcDisabled\", false)\nclient.limbcount[\"keorin\"] = {\"head\":0, \"torso\":0, \"right arm\":0, \"left arm\":0, \"right leg\":0, \"left leg\":0, \"breakpoint\":get_variable(\"breakpoint default\"), \"head_colour\":\"green\", \"head_colour\":\"green\", \"torso_colour\":\"green\", \"right arm_colour\":\"green\", \"left arm_colour\":\"green\", \"right leg_colour\":\"green\", \"left leg_colour\":\"green\"\n};\n\n//display_notice(\"Please enter your class, with LCONFIG CLASS <your class> (Examples: LCONFIG CLASS RUNEWARDEN or LCONFIG CLASS MONK). Note: The command must be entered in all lowercase\", \"green\")\n\nreflex_enable(reflex_find_by_name(\"trigger\", \"lc detect class\", false, false, \"knlc\"))\nreflex_enable(reflex_find_by_name(\"trigger\", \"lc detect dragon\", false, false, \"knlc\"))\nsend_command(\"show class\")"},{"type":"function","name":"lcClassSetup","enabled":true,"id":38,"code":"client.limbcount.damageTable = {\n    /*dragon*/\n    \"dragonRend\":1,\n    /*monk*/\n    \"tekuraPunch\":1,\n    \"tekuraKick\":2,\n    \"tekuraUppercut\":1,\n    \"tekuraSidekick\":2,\n    /*sylvan*/\n    \"thornRend\":1,\n    \"vinewreathedThornRend\":.5,\n    /*snb*/\n    \"longswordSlice\":1,\n    \"longswordRend\":1.75,\n    \"broadswordSlice\":1.2, //this may be a -little- low, but I rounded to hopefully make for cleaner numbers\n    \"broadswordRend\":2.1,\n    /*dwb*/\n    \"flailWhirl\":1.67,\n    \"morningstarWhirl\":1,\n    /*dwc*/\n    \"scimitarSlash\":1,\n    \"axeSlash\":2.3,\n    \"axeUndercut\":.9,\n    /*2h*/\n    \"hammerHit\":1.85,\n    \"bastardswordHit\":1,\n    /*Blademaster*/\n    \"arashModifier\":1.1,\n    \"doyaModifier\":1.05,\n    \"unstancedModifier\":.95,\n    \"sanyaModifier\":1,\n    \"thyrModifier\":.8,\n    \"mirModifier\":.9,\n    \"mainSlash\":1.5,\n    \"offSlash\":1,\n    \"compassSlash\":1.45,\n    /*magi*/\n    \"staffstrikeAir\":1,\n    \"staffstrikeOther\":1.75\n}\nclient.print(\"(knlc): Configuring your class...\", \"green\")\nvar lcClass = get_variable(\"lcClass\")\nclient.limbcount.diabledClass = false\n//alchemist|apostate|bard|blademaster|depthswalker|druid|sentinel|serpent|shaman|sylvan\n//infernal|jester|magi|monk|occultist|paladin|priest|runewarden|s\nvar classGroups = [\"monk\", \"magi\", \"dragon\", \"dwb\", \"dwc\", \"snb\", \"2h\", \"sylvan\", \"blademaster\"]\nfor (i = 0; i < (classGroups.length); i++){\n    reflex_disable(reflex_find_by_name(\"group\", classGroups[i] + \" group\", false, false, \"knlc\"))\n}\n//for (i = (displayList.length - 1); i > -1; i--){\n        //display_notice(displayList[i])\n    //}\nif (lcClass == \"alchemist\"){\n    display_notice(\"(knlc): KNLC is not configured for this class, it'll keep out of the way while you're in it\", \"green\")\n    client.limbcount.diabledClass = true\n}\nelse if (lcClass == \"apostate\"){\n    display_notice(\"(knlc): KNLC is not configured for this class, it'll keep out of the way while you're in it\", \"green\")\n    client.limbcount.diabledClass = true\n}\nelse if (lcClass == \"blademaster\"){\n    reflex_enable(reflex_find_by_name(\"group\", \"blademaster group\", false, false, \"knlc\"))\n    set_variable(\"lcLightAttack\", \"lcMainSlash\")\n    set_variable(\"lcHeavyAttack\", \"lcOffSlash\")\n    if ((get_variable(\"lcMainSlash\") == undefined) || (get_variable(\"lcOffSlash\") == undefined) || (get_variable(\"lcCompassSlash\") == undefined) || (get_variable(\"lcArashModifier\") == undefined) || (get_variable(\"lcDoyaModifier\") == undefined) || (get_variable(\"lcUnstancedModifier\") == undefined) || (get_variable(\"lcSanyaModifier\") == undefined) || (get_variable(\"lcThirModifier\") == undefined) || (get_variable(\"lcMirModifier\") == undefined) || (client.limbcount.isInstalling == true)){\n    \tset_variable(\"lcMainSlash\", client.limbcount.damageTable[\"mainSlash\"])\n    \tset_variable(\"lcOffSlash\", client.limbcount.damageTable[\"offSlash\"])\n    \tset_variable(\"lcCompassSlash\", client.limbcount.damageTable[\"compassSlash\"])\n    \tset_variable(\"lcArashModifier\", client.limbcount.damageTable[\"arashModifier\"])\n    \tset_variable(\"lcDoyaModifier\", client.limbcount.damageTable[\"doyaModifier\"])\n    \tset_variable(\"lcUnstancedModifier\", client.limbcount.damageTable[\"unstancedModifier\"])\n    \tset_variable(\"lcSanyaModifier\", client.limbcount.damageTable[\"sanyaModifier\"])\n    \tset_variable(\"lcThyrModifier\", client.limbcount.damageTable[\"thyrModifier\"]) \n    \tset_variable(\"lcMirModifier\", client.limbcount.damageTable[\"mirModifier\"])\n        set_variable(\"breakpoint default\", 7)\n    }\n    display_notice(\"(knlc): Blademaster class enabled\", \"green\")\n}\nelse if (lcClass == \"depthswalker\"){\n    display_notice(\"(knlc): KNLC is not configured for this class, it'll keep out of the way while you're in it\", \"green\")\n    client.limbcount.diabledClass = true\n    \n}\nelse if (lcClass == \"druid\"){\n    display_notice(\"(knlc): KNLC is not configured for this class, it'll keep out of the way while you're in it\", \"green\")\n    client.limbcount.diabledClass = true\n    \n}\nelse if (lcClass == \"dragon\"){\n    reflex_enable(reflex_find_by_name(\"group\", \"dragon group\", false, false, \"knlc\"))\n    set_variable(\"lcLightAttack\", \"lcDragonRend\")\n    set_variable(\"lcHeavyAttack\", \"lcDragonRend\")\n    if ((get_variable(\"lcDragonRend\") == undefined) || (client.limbcount.isInstalling == true)){\n        set_variable(\"lcDragonRend\", client.limbcount.damageTable[\"dragonRend\"])\n    }\n    display_notice(\"(knlc): Dragon class enabled\", \"green\")\n    set_variable(\"breakpoint default\", 4)\n}\nelse if (lcClass == \"infernal\"){\n    if (get_variable(\"lcKnightspec\") == \"dwb\"){\n        reflex_enable(reflex_find_by_name(\"group\", \"dwb group\", false, false, \"knlc\"))\n        set_variable(\"lcLightAttack\", \"lcMorningstarWhirl\")\n    \tset_variable(\"lcHeavyAttack\", \"lcFlailWhirl\")\n    \tif ((get_variable(\"lcMorningstarWhirl\") == undefined) || (get_variable(\"lcFlailWhirl\") == undefined) || (client.limbcount.isInstalling == true)){\n    \t\tset_variable(\"lcMorningstarWhirl\", client.limbcount.damageTable[\"morningstarWhirl\"])\n    \t\tset_variable(\"lcFlailWhirl\", client.limbcount.damageTable[\"flailWhirl\"])\n        }\n        display_notice(\"(knlc): DWB infernal enabled\", \"green\")\n        set_variable(\"breakpoint default\", 7)\n    }\n    else if (get_variable(\"lcKnightspec\") == \"dwc\"){\n        reflex_enable(reflex_find_by_name(\"group\", \"dwc group\", false, false, \"knlc\"))\n        set_variable(\"lcLightAttack\", \"lcScimitarDoubleslash\")\n    \tset_variable(\"lcHeavyAttack\", \"lcAxeDoubleslash\")\n    \tif ((get_variable(\"lcScimitarSlash\") == undefined) || (get_variable(\"lcAxeSlash\") == undefined) || (get_variable(\"lcScimitarDoubleslash\") == undefined) || (get_variable(\"lcAxeDoubleslash\") == undefined) || (get_variable(\"lcUndercut\") == undefined) || (client.limbcount.isInstalling == true)){\n    \t\tset_variable(\"lcScimitarSlash\", client.limbcount.damageTable[\"scimitarSlash\"])\n    \t\tset_variable(\"lcAxeSlash\", client.limbcount.damageTable[\"axeSlash\"])\n    \t\tset_variable(\"lcScimitarDoubleslash\",(get_variable(\"lcScimitarSlash\") * 2))\n    \t\tset_variable(\"lcAxeDoubleslash\", (get_variable(\"lcAxeSlash\") * 2))\n            set_variable(\"lcUndercut\", client.limbcount.damageTable[\"axeUndercut\"])\n        }\n        display_notice(\"(knlc): DWC infernal enabled\", \"green\")\n        set_variable(\"breakpoint default\", 14)\n    }\n    else if (get_variable(\"lcKnightspec\") == \"snb\"){\n        reflex_enable(reflex_find_by_name(\"group\", \"snb group\", false, false, \"knlc\"))\n        set_variable(\"lcLightAttack\", \"lcLongswordSlice\")\n    \tset_variable(\"lcHeavyAttack\", \"lcLongswordRend\")\n    \tif ((get_variable(\"lcLongswordSlice\") == undefined) || (get_variable(\"lcLongswordRend\") == undefined) || (get_variable(\"lcBroadswordSlice\") == undefined) || (get_variable(\"lcBroadswordRend\") == undefined) || (client.limbcount.isInstalling == true)){\n    \t\tset_variable(\"lcLongswordSlice\", client.limbcount.damageTable[\"longswordSlice\"])\n    \t\tset_variable(\"lcLongswordRend\", client.limbcount.damageTable[\"longswordRend\"])\n    \t\tset_variable(\"lcBroadswordSlice\", client.limbcount.damageTable[\"broadswordSlice\"])\n    \t\tset_variable(\"lcBroadswordRend\", client.limbcount.damageTable[\"broadswordRend\"]) \n        }\n        display_notice(\"(knlc): SNB infernal enabled\", \"green\")\n        set_variable(\"breakpoint default\", 13)\n    }\n    else if (get_variable(\"lcKnightspec\") == \"2h\"){\n        reflex_enable(reflex_find_by_name(\"group\", \"2h group\", false, false, \"knlc\"))\n        set_variable(\"lcLightAttack\", \"lcBastardsword\")\n    \tset_variable(\"lcHeavyAttack\", \"lcHammer\")\n    \tif ((get_variable(\"lcBastardsword\") == undefined) || (get_variable(\"lcHammer\") == undefined) || (client.limbcount.isInstalling == true)){\n    \t\tset_variable(\"lcBastardsword\", client.limbcount.damageTable[\"bastardswordHit\"])\n    \t\tset_variable(\"lcHammer\", client.limbcount.damageTable[\"hammerHit\"])\n        }\n        display_notice(\"(knlc): 2H infernal enabled\", \"green\")\n        set_variable(\"breakpoint default\", 7)\n    } \n}\nelse if (lcClass == \"jester\"){\n    display_notice(\"(knlc): KNLC is not configured for this class, it'll keep out of the way while you're in it\", \"green\")\n    client.limbcount.diabledClass = true\n}\nelse if (lcClass == \"magi\"){\n    reflex_enable(reflex_find_by_name(\"group\", \"magi group\", false, false, \"knlc\"))\n        set_variable(\"lcLightAttack\", \"lcStaffstrikeAir\")\n    \tset_variable(\"lcHeavyAttack\", \"lcStaffstrikeOther\")\n    if ((get_variable(\"lcStaffstrikeAir\") == undefined) ||(get_variable(\"lcStaffstrikeOther\") == undefined) || (client.limbcount.isInstalling == true) || (client.limbcount.isInstalling == true)){\n    \t\tset_variable(\"lcStaffstrikeAir\", client.limbcount.damageTable[\"staffstrikeAir\"])\n    \t\tset_variable(\"lcStaffstrikeOther\", client.limbcount.damageTable[\"staffstrikeOther\"])\n        }\n    display_notice(\"(knlc): Magi class enabled\", \"green\")\n    set_variable(\"breakpoint default\", 12)\n}\nelse if (lcClass == \"monk\"){\n    reflex_enable(reflex_find_by_name(\"group\", \"monk group\", false, false, \"knlc\"))\n    set_variable(\"lcLightAttack\", \"lcPunch\")\n    set_variable(\"lcHeavyAttack\", \"lcKick\")\n    if ((get_variable(\"lcPunch\") == undefined) || (get_variable(\"lcKick\") == undefined) || (get_variable(\"lcUppercut\") == undefined) || (get_variable(\"lcSidekick\") == undefined) || (client.limbcount.isInstalling == true)){\n    \tset_variable(\"lcPunch\", client.limbcount.damageTable[\"tekuraPunch\"])\n    \tset_variable(\"lcKick\", client.limbcount.damageTable[\"tekuraKick\"])\n    \tset_variable(\"lcUppercut\", client.limbcount.damageTable[\"tekuraUppercut\"])\n    \tset_variable(\"lcSidekick\", client.limbcount.damageTable[\"tekuraSidekick\"])   \n    }\n    display_notice(\"(knlc): Monk class enabled\", \"green\")\n    set_variable(\"breakpoint default\", 8)\n}\nelse if (lcClass == \"occultist\"){\n    display_notice(\"KNLC is not configured for this class, it'll keep out of the way while you're in it\", \"green\")\n    client.limbcount.diabledClass = true\n}\nelse if (lcClass == \"paladin\"){\n    if (get_variable(\"lcKnightspec\") == \"dwb\"){\n        reflex_enable(reflex_find_by_name(\"group\", \"dwb group\", false, false, \"knlc\"))\n        set_variable(\"lcLightAttack\", \"lcMorningstarWhirl\")\n    \tset_variable(\"lcHeavyAttack\", \"lcFlailWhirl\")\n    \tif ((get_variable(\"lcMorningstarWhirl\") == undefined) || (get_variable(\"lcFlailWhirl\") == undefined) || (client.limbcount.isInstalling == true)){\n    \t\tset_variable(\"lcMorningstarWhirl\", client.limbcount.damageTable[\"morningstarWhirl\"])\n    \t\tset_variable(\"lcFlailWhirl\", client.limbcount.damageTable[\"flailWhirl\"])\n        }\n        display_notice(\"(knlc): DWB paladin enabled\", \"green\")\n        set_variable(\"breakpoint default\", 7)\n    }\n    else if (get_variable(\"lcKnightspec\") == \"dwc\"){\n        reflex_enable(reflex_find_by_name(\"group\", \"dwc group\", false, false, \"knlc\"))\n        set_variable(\"lcLightAttack\", \"lcScimitarDoubleslash\")\n    \tset_variable(\"lcHeavyAttack\", \"lcAxeDoubleslash\")\n    \tif ((get_variable(\"lcScimitarSlash\") == undefined) || (get_variable(\"lcAxeSlash\") == undefined) || (get_variable(\"lcScimitarDoubleslash\") == undefined) || (get_variable(\"lcAxeDoubleslash\") == undefined) || (get_variable(\"lcUndercut\") == undefined) || (client.limbcount.isInstalling == true)){\n    \t\tset_variable(\"lcScimitarSlash\", client.limbcount.damageTable[\"scimitarSlash\"])\n    \t\tset_variable(\"lcAxeSlash\", client.limbcount.damageTable[\"axeSlash\"])\n    \t\tset_variable(\"lcScimitarDoubleslash\",(get_variable(\"lcScimitarSlash\") * 2))\n    \t\tset_variable(\"lcAxeDoubleslash\", (get_variable(\"lcAxeSlash\") * 2))\n            set_variable(\"lcUndercut\", client.limbcount.damageTable[\"axeUndercut\"])\n        }\n        display_notice(\"(knlc): DWC paladin enabled\", \"green\")\n        set_variable(\"breakpoint default\", 14)\n    }\n    else if (get_variable(\"lcKnightspec\") == \"snb\"){\n        reflex_enable(reflex_find_by_name(\"group\", \"snb group\", false, false, \"knlc\"))\n        set_variable(\"lcLightAttack\", \"lcLongswordSlice\")\n    \tset_variable(\"lcHeavyAttack\", \"lcLongswordRend\")\n    \tif ((get_variable(\"lcLongswordSlice\") == undefined) || (get_variable(\"lcLongswordRend\") == undefined) || (get_variable(\"lcBroadswordSlice\") == undefined) || (get_variable(\"lcBroadswordRend\") == undefined) || (client.limbcount.isInstalling == true)){\n    \t\tset_variable(\"lcLongswordSlice\", client.limbcount.damageTable[\"longswordSlice\"])\n    \t\tset_variable(\"lcLongswordRend\", client.limbcount.damageTable[\"longswordRend\"])\n    \t\tset_variable(\"lcBroadswordSlice\", client.limbcount.damageTable[\"broadswordSlice\"])\n    \t\tset_variable(\"lcBroadswordRend\", client.limbcount.damageTable[\"broadswordRend\"]) \n        }\n        display_notice(\"(knlc): SNB paladin enabled\", \"green\")\n        set_variable(\"breakpoint default\", 13)\n    }\n    else if (get_variable(\"lcKnightspec\") == \"2h\"){\n        reflex_enable(reflex_find_by_name(\"group\", \"2h group\", false, false, \"knlc\"))\n        set_variable(\"lcLightAttack\", \"lcBastardsword\")\n    \tset_variable(\"lcHeavyAttack\", \"lcHammer\")\n    \tif ((get_variable(\"lcBastardsword\") == undefined) || (get_variable(\"lcHammer\") == undefined) || (client.limbcount.isInstalling == true)){\n    \t\tset_variable(\"lcBastardsword\", client.limbcount.damageTable[\"bastardswordHit\"])\n    \t\tset_variable(\"lcHammer\", client.limbcount.damageTable[\"hammerHit\"])\n        }\n        display_notice(\"(knlc): 2H paladin enabled\", \"green\")\n        set_variable(\"breakpoint default\", 7)\n    } \n}\nelse if (lcClass == \"priest\"){\n    display_notice(\"KNLC is not configured for this class, it'll keep out of the way while you're in it\", \"green\")\n    client.limbcount.diabledClass = true\n}\nelse if (lcClass == \"runewarden\"){\n    if (get_variable(\"lcKnightspec\") == \"dwb\"){\n        reflex_enable(reflex_find_by_name(\"group\", \"dwb group\", false, false, \"knlc\"))\n        set_variable(\"lcLightAttack\", \"lcMorningstarWhirl\")\n    \tset_variable(\"lcHeavyAttack\", \"lcFlailWhirl\")\n    \tif ((get_variable(\"lcMorningstarWhirl\") == undefined) || (get_variable(\"lcFlailWhirl\") == undefined) || (client.limbcount.isInstalling == true)){\n    \t\tset_variable(\"lcMorningstarWhirl\", client.limbcount.damageTable[\"morningstarWhirl\"])\n    \t\tset_variable(\"lcFlailWhirl\", client.limbcount.damageTable[\"flailWhirl\"])\n        }\n        display_notice(\"(knlc): DWB runewarden enabled\", \"green\")\n        set_variable(\"breakpoint default\", 6)\n    }\n    else if (get_variable(\"lcKnightspec\") == \"dwc\"){\n        reflex_enable(reflex_find_by_name(\"group\", \"dwc group\", false, false, \"knlc\"))\n        set_variable(\"lcLightAttack\", \"lcScimitarDoubleslash\")\n    \tset_variable(\"lcHeavyAttack\", \"lcAxeDoubleslash\")\n    \tif ((get_variable(\"lcScimitarSlash\") == undefined) || (get_variable(\"lcAxeSlash\") == undefined) || (get_variable(\"lcScimitarDoubleslash\") == undefined) || (get_variable(\"lcAxeDoubleslash\") == undefined) || (get_variable(\"lcUndercut\") == undefined) || (client.limbcount.isInstalling == true)){\n    \t\tset_variable(\"lcScimitarSlash\", client.limbcount.damageTable[\"scimitarSlash\"])\n    \t\tset_variable(\"lcAxeSlash\", client.limbcount.damageTable[\"axeSlash\"])\n    \t\tset_variable(\"lcScimitarDoubleslash\",(get_variable(\"lcScimitarSlash\") * 2))\n    \t\tset_variable(\"lcAxeDoubleslash\", (get_variable(\"lcAxeSlash\") * 2))\n            set_variable(\"lcUndercut\", client.limbcount.damageTable[\"axeUndercut\"])\n        }\n        display_notice(\"(knlc): DWC runewarden enabled\", \"green\")\n        set_variable(\"breakpoint default\", 12)\n    }\n    else if (get_variable(\"lcKnightspec\") == \"snb\"){\n        reflex_enable(reflex_find_by_name(\"group\", \"snb group\", false, false, \"knlc\"))\n        set_variable(\"lcLightAttack\", \"lcLongswordSlice\")\n    \tset_variable(\"lcHeavyAttack\", \"lcLongswordRend\")\n    \tif ((get_variable(\"lcLongswordSlice\") == undefined) || (get_variable(\"lcLongswordRend\") == undefined) || (get_variable(\"lcBroadswordSlice\") == undefined) || (get_variable(\"lcBroadswordRend\") == undefined) || (client.limbcount.isInstalling == true)) {\n    \t\tset_variable(\"lcLongswordSlice\", client.limbcount.damageTable[\"longswordSlice\"])\n    \t\tset_variable(\"lcLongswordRend\", client.limbcount.damageTable[\"longswordRend\"])\n    \t\tset_variable(\"lcBroadswordSlice\", client.limbcount.damageTable[\"broadswordSlice\"])\n    \t\tset_variable(\"lcBroadswordRend\", client.limbcount.damageTable[\"broadswordRend\"]) \n        }\n        display_notice(\"(knlc): SNB runewarden enabled\", \"green\")\n        set_variable(\"breakpoint default\", 11)\n    }\n    else if (get_variable(\"lcKnightspec\") == \"2h\"){\n        reflex_enable(reflex_find_by_name(\"group\", \"2h group\", false, false, \"knlc\"))\n        set_variable(\"lcLightAttack\", \"lcBastardsword\")\n    \tset_variable(\"lcHeavyAttack\", \"lcHammer\")\n    \tif ((get_variable(\"lcBastardsword\") == undefined) || (get_variable(\"lcHammer\") == undefined) || (client.limbcount.isInstalling == true)){\n    \t\tset_variable(\"lcBastardsword\", client.limbcount.damageTable[\"bastardswordHit\"])\n    \t\tset_variable(\"lcHammer\", client.limbcount.damageTable[\"hammerHit\"])\n        }\n        display_notice(\"(knlc): 2H runewarden enabled\", \"green\")\n        set_variable(\"breakpoint default\", 6)\n    }  \n}\nelse if (lcClass == \"sentinel\"){\n    display_notice(\"(knlc): KNLC is not configured for this class, it'll keep out of the way while you're in it\", \"green\")\n    client.limbcount.diabledClass = true\n}\nelse if (lcClass == \"serpent\"){\n    display_notice(\"(knlc): KNLC is not configured for this class, it'll keep out of the way while you're in it\", \"green\")\n    client.limbcount.diabledClass = true\n}\nelse if (lcClass == \"shaman\"){\n    display_notice(\"(knlc): KNLC is not configured for this class, it'll keep out of the way while you're in it\", \"green\")\n    client.limbcount.diabledClass = true\n}\nelse if (lcClass == \"sylvan\"){\n    reflex_enable(reflex_find_by_name(\"group\", \"sylvan group\", false, false, \"knlc\"))\n    \tset_variable(\"lcLightAttack\", \"lcVinewreathedThornrend\")\n    \tset_variable(\"lcHeavyAttack\", \"lcThornrend\")\n    \tif ((get_variable(\"lcVinewreathedThornrend\") == undefined) || (get_variable(\"lcThornrend\") == undefined) || (client.limbcount.isInstalling == true)){\n    \t\tset_variable(\"lcVinewreathedThornrend\", client.limbcount.damageTable[\"vinewreathedThornRend\"])\n    \t\tset_variable(\"lcThornrend\", client.limbcount.damageTable[\"thornRend\"])\n            set_variable(\"breakpoint default\", 4)\n        }\n    display_notice(\"(knlc): Sylvan class enabled\", \"green\")\n}\nelse {\n    display_notice(\"(knlc): Something went wrong, please re-enter your class\", \"green\")\n    client.limbcount.diabledClass = true\n}\n\nif (client.limbcount.diabledClass == true) {\n    client.isPromptConfig = false\n\tclient.gagbreaks = 0\n\tclient.promptConfigStep2 = false\n    set_variable(\"lcDisabled\", true)\n    run_function(\"lcPromptUnconfiguration\", \" \", \"KNLC\")\n    if (client.limbcount.isInstalling == true) {\n    display_notice(\"KNLC is installed, good luck!\", \"green\")\n        client.limbcount.isInstalling = false\n    }\n}\nelse {  \n    set_variable(\"lcDisabled\", false)\n\tif ((client.limbcount.isInstalling == true) || (get_variable(\"lcDisplay\") == undefined)){\n    display_notice(\"(knlc): How do you want knlc to display damage? Enter with LCONFIG DISPLAY <display option>. Choices are VERBOSEPROMPT, BRIEFPROMPT, AFTERPROMPT, and NONE. Examples of each can be found in the readme. Note: you can use this command again later to change your setting\", \"green\")\n\t}\n    else if ((get_variable(\"lcDisplay\") == \"verboseprompt\") || (get_variable(\"lcDisplay\") == \"briefprompt\")) {\n        \tclient.isPromptConfig = false\n\t\t\tclient.gagbreaks = 0\n\t\t\tclient.promptConfigStep2 = false\n             run_function(\"lcPromptConfiguration\", \" \", \"KNLC\")\n\t}\n}\n//set_variable(\"lcDisabled\", false)"},{"type":"trigger","name":"lc detect dragon","enabled":false,"id":41,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"You are a mighty (.*) Dragon","actions":[{"action":"script","script":"gag_current_line()\nset_variable(\"lcClass\", \"dragon\")\ndisplay_notice(\"(knlc): Please enter your current lesserform class, with LCONFIG LESSERFORM <your class> (Examples: LCONFIG LESSERFORM RUNEWARDEN or LCONFIG LESSERFORM MONK). Note: The command must be entered in all lowercase\", \"green\")\nreflex_disable(reflex_find_by_name(\"trigger\", \"lc detect class\", false, false, \"knlc\"))\nreflex_disable(reflex_find_by_name(\"trigger\", \"lc detect dragon\", false, false, \"knlc\"))\n"}]},{"type":"trigger","name":"lc detect class","enabled":false,"id":40,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^You are a member of the (.*) class","actions":[{"action":"script","script":"\ngag_current_line()\nset_variable(\"lcClass\", args[1].toLowerCase())\nclient.print(\"(knlc): Class detected as \" + args[1].toLowerCase(), \"green\") \nreflex_disable(reflex_find_by_name(\"trigger\", \"lc detect class\", false, false, \"knlc\"))\nreflex_disable(reflex_find_by_name(\"trigger\", \"lc detect dragon\", false, false, \"knlc\"))\nif ((args[1] == \"Runewarden\") || (args[1] == \"Paladin\") || (args[1] == \"Infernal\")) {\ndisplay_notice(\"Please enter your current weaponmastery specialization, with LCONFIG KNIGHTSPEC SNB/DWC/DWB/2H (Examples: LCONFIG KNIGHTSPEC DWC or LCONFIG KNIGHTSPEC 2H). Note: The command must be entered in all lowercase\", \"green\")\n}\nelse {\n    run_function(\"lcClassSetup\", \" \", \"knlc\")\n}"}]},{"type":"trigger","name":"lcdragonformed","enabled":true,"id":96,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"With an ear-splitting roar, you rear back your draconic head and scream out your triumph","actions":[{"action":"script","script":"set_variable(\"lcLesserform\", get_variable(\"lcClass\"))\nset_variable(\"lcClass\", \"dragon\")\nrun_function(\"lcClassSetup\", \" \", \"knlc\")"}]},{"type":"trigger","name":"lclesserformed","enabled":true,"id":97,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"Your draconic form melts away, leaving you suddenly weaker and more vulnerable\\.","actions":[{"action":"script","script":"set_variable(\"lcClass\", get_variable(\"lcLesserform\"))\nrun_function(\"lcClassSetup\", \" \", \"knlc\")"}]},{"type":"trigger","name":"class switch","enabled":true,"id":109,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^You are now a member of the (.*) class","actions":[{"action":"script","script":"set_variable(\"lcClass\", args[1])\nrun_function(\"lcClassSetup\", \" \", \"knlc\")"}]}],"actions":[]},{"type":"group","name":"configuration aliases","enabled":true,"id":75,"items":[{"type":"alias","name":"lc display select","enabled":true,"id":68,"matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"client.isPromptConfig = false\nclient.gagbreaks = 0\nclient.promptConfigStep2 = false\nif ((args[1] == \"verboseprompt\") || (args[1] == \"briefprompt\")) {\n    set_variable(\"lcDisplay\", args[1])\n    client.print(\"(knlc): Display set to \" + args[1], \"green\")\n    run_function(\"lcPromptConfiguration\", \" \", \"KNLC\")\n    if (client.limbcount.isInstalling == true) {\n    display_notice(\"KNLC is installed, good luck!\", \"green\")\n        client.limbcount.isInstalling = false\n    }\n}\nelse if ((args[1] == \"afterprompt\") || (args[1] == \"none\")) {\n    set_variable(\"lcDisplay\", args[1])\n        client.print(\"(knlc): Display set to \" + args[1], \"green\")\n    run_function(\"lcPromptUnconfiguration\", \" \", \"KNLC\")\n    if (client.limbcount.isInstalling == true) {\n    display_notice(\"KNLC is installed, good luck!\", \"green\")\n        client.limbcount.isInstalling = false\n    }\n}\nelse {\n  display_notice(\"(knlc): Not a valid option. Display options are are VERBOSEPROMPT, BRIEFPROMPT, AFTERPROMPT, and NONE. Enter with LCONFIG DISPLAY <display option>.\", \"green\")\n}\n\n        \n    "}],"text":"^lconfig display (.+)"},{"type":"alias","name":"lc knight specialization","enabled":true,"id":43,"matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"set_variable(\"lcKnightspec\", args[1])\ndisplay_notice(\"(knlc): Weaponmastery specialization set as \" + get_variable(\"lcKnightspec\"))\nrun_function(\"lcClassSetup\", \" \", \"knlc\")"}],"text":"^lconfig knightspec (snb|dwc|2h|dwb)$"},{"type":"alias","name":"lc lesserform select","enabled":true,"id":42,"matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"set_variable(\"lcLesserform\", args[1])\ndisplay_notice(\"(knlc): Lesserform class set to \" + args[1], \"green\")\n\n\nif ((args[1] == \"runewarden\") || (args[1] == \"paladin\") || (args[1] == \"infernal\")) {\ndisplay_notice(\"Please enter your current weaponmastery specialization, with LCONFIG KNIGHTSPEC SNB/DWC/DWB/2H (Examples: LCONFIG KNIGHTSPEC DWC or LCONFIG KNIGHTSPEC 2H). Note: The command must be entered in all lowercase\", \"green\")\n}\nelse {\n    run_function(\"lcClassSetup\", \" \", \"knlc\")\n}"}],"text":"^lconfig lesserform (alchemist|apostate|bard|blademaster|depthswalker|druid|infernal|jester|magi|monk|occultist|paladin|priest|runewarden|sentinel|serpent|shaman|sylvan)$"},{"type":"alias","name":"lc install","enabled":true,"id":33,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"display_notice(\"(knlc): Installing KNLC\", \"green\")\nrun_function(\"KNLC install\", \" \", \"KNLC\")"}],"text":"lcinstall"},{"type":"alias","name":"class select (for debugging)","enabled":true,"id":37,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"set_variable(\"lcClass\", args[1])\nrun_function(\"lcClassSetup\", \" \", \"knlc\")"}],"text":"^lconfig class (alchemist|apostate|bard|blademaster|depthswalker|druid|infernal|jester|magi|monk|occultist|paladin|priest|runewarden|sentinel|serpent|shaman|sylvan)$"}],"actions":[]},{"type":"group","name":"display functions","enabled":true,"id":74,"items":[{"type":"trigger","name":"lc configure prompt","enabled":false,"id":69,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^(.*)$","actions":[{"action":"script","script":"if (client.isPromptConfig == true) {\n\tclient.isPromptConfig = false\n\tgag_current_line()\n\t//display_notice(\"configuring prompt\")\n    reflex_enable(reflex_find_by_name(\"trigger\", \"lc prompt configured\", false, false, \"knlc\"))\n    send_command(\"config prompt custom \" + args[1] + \"-\")\n}\nelse if (client.promptConfigStep2 == true) {\n    client.promptConfigStep2 = false\n    set_variable(\"lcPromptConfigured\", true)\n    gag_current_line()\nreflex_disable(reflex_find_by_name(\"trigger\", \"lc configure prompt\", false, false, \"knlc\"))\nreflex_disable(reflex_find_by_name(\"trigger\", \"lc prompt detected\", false, false, \"knlc\"))\nreflex_disable(reflex_find_by_name(\"trigger\", \"lc prompt configured\", false, false, \"knlc\"))\n}\nelse {\n    client.gagbreaks = client.gagbreaks + 1\n    //client.print(\"gagged\")\n    if (client.gagbreaks >= 4) {\n        //client.print(\"gagbreak\")\n        reflex_disable(reflex_find_by_name(\"trigger\", \"lc configure prompt\", false, false, \"knlc\"))\nreflex_disable(reflex_find_by_name(\"trigger\", \"lc prompt detected\", false, false, \"knlc\"))\nreflex_disable(reflex_find_by_name(\"trigger\", \"lc prompt configured\", false, false, \"knlc\"))\n\t}\n\telse {\n    \tgag_current_line()\n    }\n\n}"}]},{"type":"trigger","name":"lc unconfigure prompt","enabled":false,"id":72,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^(.*)$","actions":[{"action":"script","script":"if (client.isPromptConfig == true) {\n\tclient.isPromptConfig = false\n\tgag_current_line()\n\t//display_notice(\"unconfiguring prompt\")\n    reflex_enable(reflex_find_by_name(\"trigger\", \"lc prompt configured\", false, false, \"knlc\"))\n    if (args[1].endsWith(\"-\") == true) {\n        //client.print(\"matched\")\n        send_command(\"config prompt custom \" + args[1].slice(0, -1))\n\t}\n    else {\n        client.print(\"nofire\")\n        reflex_disable(reflex_find_by_name(\"trigger\", \"lc unconfigure prompt\", false, false, \"knlc\"))\n\t\treflex_disable(reflex_find_by_name(\"trigger\", \"lc prompt detected\", false, false, \"knlc\"))\n\t\treflex_disable(reflex_find_by_name(\"trigger\", \"lc prompt configured\", false, false, \"knlc\"))\n    }\n}\nelse if (client.promptConfigStep2 == true) {\n    client.promptConfigStep2 = false\n    set_variable(\"lcPromptConfigured\", false)\n    gag_current_line()\nreflex_disable(reflex_find_by_name(\"trigger\", \"lc unconfigure prompt\", false, false, \"knlc\"))\nreflex_disable(reflex_find_by_name(\"trigger\", \"lc prompt detected\", false, false, \"knlc\"))\nreflex_disable(reflex_find_by_name(\"trigger\", \"lc prompt configured\", false, false, \"knlc\"))\n}\nelse {\n    client.gagbreaks = client.gagbreaks + 1\n    if (client.gagbreaks >= 4) {\n        //client.print(\"hit the breaks\")\n        reflex_disable(reflex_find_by_name(\"trigger\", \"lc unconfigure prompt\", false, false, \"knlc\"))\nreflex_disable(reflex_find_by_name(\"trigger\", \"lc prompt detected\", false, false, \"knlc\"))\nreflex_disable(reflex_find_by_name(\"trigger\", \"lc prompt configured\", false, false, \"knlc\"))\n\t}\n\telse {\n    \tgag_current_line()\n    }\n\n}"}]},{"type":"trigger","name":"lc prompt detected","enabled":false,"id":70,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^Your current custom prompt is:$","actions":[{"action":"script","script":"gag_current_line()\n//client.print(\"found prompt\")\nclient.isPromptConfig = true"}]},{"type":"trigger","name":"lc prompt configured","enabled":false,"id":71,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^Your custom prompt is now:$","actions":[{"action":"script","script":"gag_current_line()\n//client.print(\"configured prompt\")\nclient.promptConfigStep2 = true\n"}]},{"type":"function","name":"lcAfterpromptDisplay","enabled":true,"id":73,"code":"var person = get_variable(\"lastHit\")\t\n\nclient.limbcount.afterpromptDisplay = setTimeout(function () { \n        var headColoured = parseFloat(client.limbcount[person][\"head\"].toFixed(1)).toString().fontcolor(client.limbcount[person][\"head_colour\"])\n        var torsoColored = parseFloat(client.limbcount[person][\"torso\"].toFixed(1)).toString().fontcolor(client.limbcount[person][\"torso_colour\"])\n        var rightArmColoured = parseFloat(client.limbcount[person][\"right arm\"].toFixed(1)).toString().fontcolor(client.limbcount[person][\"right arm_colour\"])\n        var leftArmColoured = parseFloat(client.limbcount[person][\"left arm\"].toFixed(1)).toString().fontcolor(client.limbcount[person][\"left arm_colour\"])\n        var rightLegColoured = parseFloat(client.limbcount[person][\"right leg\"].toFixed(1)).toString().fontcolor(client.limbcount[person][\"right leg_colour\"])\n        var leftLegColoured = parseFloat(client.limbcount[person][\"left leg\"].toFixed(1)).toString().fontcolor(client.limbcount[person][\"left leg_colour\"])\n    \tclient.print(\"LL: \" + leftLegColoured + \"/\" + client.limbcount[person][\"breakpoint\"] + \" RL: \" + rightLegColoured + \"/\" + client.limbcount[person][\"breakpoint\"] + \" LA: \" + leftArmColoured + \"/\" + client.limbcount[person][\"breakpoint\"] + \" RA: \" + rightArmColoured + \"/\" + client.limbcount[person][\"breakpoint\"] + \" T: \" +  torsoColored + \"/\" + client.limbcount[person][\"breakpoint\"] + \" H: \" + headColoured + \"/\" + client.limbcount[person][\"breakpoint\"])\n\t}, 5);\n\n"},{"type":"trigger","name":"lc Prompt Display","enabled":true,"id":11,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"(\\d+)h,(.*)(\\d+)m,(.*)","actions":[{"action":"script","script":"if ((client.limbcount == null) || (client.limbcount[get_variable(\"lastHit\")] == undefined)){\n    run_function(\"lcLogin\", \"\", \"knlc\")\n}//parseFloat(client.limbcount[person][\"left leg\"]).toFixed(1) .toString()\nvar promptlength = args[0].length\nvar person = get_variable(\"lastHit\")\nif (get_variable(\"lcDisplay\") == \"verboseprompt\") {\nreplace_current_line( promptlength - 1, 1, \" |\" + client.limbcount[person][\"breakpoint\"]  + \"|\", \"white\")\nreplace_current_line( promptlength - 1, 1, \" \" + parseFloat(client.limbcount[person][\"head\"].toFixed(1)).toString(), client.limbcount[person][\"head_colour\"])\nreplace_current_line( promptlength - 1, 1, \" |H:\", \"white\")\nreplace_current_line( promptlength - 1, 1, \" \" + parseFloat(client.limbcount[person][\"torso\"].toFixed(1)).toString(), client.limbcount[person][\"torso_colour\"])\nreplace_current_line( promptlength - 1, 1, \" |T:\", \"white\")\nreplace_current_line( promptlength - 1, 1, \" \" + parseFloat(client.limbcount[person][\"right arm\"].toFixed(1)).toString(), client.limbcount[person][\"right arm_colour\"])\nreplace_current_line( promptlength - 1, 1, \" |RA:\", \"white\")\nreplace_current_line( promptlength - 1, 1, \" \" + parseFloat(client.limbcount[person][\"left arm\"].toFixed(1)).toString(), client.limbcount[person][\"left arm_colour\"])\nreplace_current_line( promptlength - 1, 1, \" |LA:\", \"white\")\nreplace_current_line( promptlength - 1, 1, \" \" + parseFloat(client.limbcount[person][\"right leg\"].toFixed(1)).toString(), client.limbcount[person][\"right leg_colour\"])\nreplace_current_line( promptlength - 1, 1, \" |RL:\", \"white\")\nreplace_current_line( promptlength - 1, 1, \" \" + parseFloat(client.limbcount[person][\"left leg\"].toFixed(1)).toString(), client.limbcount[person][\"left leg_colour\"])\nreplace_current_line( promptlength - 1, 1, \"|LL:\", \"white\")\n}\nelse if (get_variable(\"lcDisplay\") == \"briefprompt\") {\n    replace_current_line( promptlength - 1, 1, \" |\" + client.limbcount[person][\"breakpoint\"]  + \"|\", \"white\")\nreplace_current_line( promptlength - 1, 1, \" \" + parseFloat(client.limbcount[person][\"head\"].toFixed(1)).toString(), client.limbcount[person][\"head_colour\"])\nreplace_current_line( promptlength - 1, 1, \" /\", \"white\")\nreplace_current_line( promptlength - 1, 1, \" \" + parseFloat(client.limbcount[person][\"torso\"].toFixed(1)).toString(), client.limbcount[person][\"torso_colour\"])\nreplace_current_line( promptlength - 1, 1, \" |\", \"white\")\nreplace_current_line( promptlength - 1, 1, \" \" + parseFloat(client.limbcount[person][\"right arm\"].toFixed(1)).toString(), client.limbcount[person][\"right arm_colour\"])\nreplace_current_line( promptlength - 1, 1, \" /\", \"white\")\nreplace_current_line( promptlength - 1, 1, \" \" + parseFloat(client.limbcount[person][\"left arm\"].toFixed(1)).toString(), client.limbcount[person][\"left arm_colour\"])\nreplace_current_line( promptlength - 1, 1, \" |\", \"white\")\nreplace_current_line( promptlength - 1, 1, \" \" + parseFloat(client.limbcount[person][\"right leg\"].toFixed(1)).toString(), client.limbcount[person][\"right leg_colour\"])\nreplace_current_line( promptlength - 1, 1, \" /\", \"white\")\nreplace_current_line( promptlength - 1, 1, \" \" + parseFloat(client.limbcount[person][\"left leg\"].toFixed(1)).toString(), client.limbcount[person][\"left leg_colour\"])\nreplace_current_line( promptlength - 1, 1, \"|\", \"white\")\n}\n\n\n\n\n\n\n\n\n\n\n"}],"items":[]},{"type":"function","name":"lcPromptConfiguration","enabled":true,"id":92,"code":"\n    if (get_variable(\"lcPromptConfigured\") != true) {\n        \n\treflex_enable(reflex_find_by_name(\"trigger\", \"lc configure prompt\", false, false, \"knlc\"))\n    send_command(\"config prompt custom\")\n    reflex_enable(reflex_find_by_name(\"trigger\", \"lc prompt detected\", false, false, \"knlc\"))\n    //reflex_enable(reflex_find_by_name(\"trigger\", \"lc prompt display\", false, false, \"knlc\"))\n    }"},{"type":"function","name":"lcPromptUnconfiguration","enabled":true,"id":93,"code":"    //reflex_disable(reflex_find_by_name(\"trigger\", \"lc prompt display\", false, false, \"knlc\"))\n\n    if ( get_variable(\"lcPromptConfigured\") == true) {\n      reflex_enable(reflex_find_by_name(\"trigger\", \"lc unconfigure prompt\", false, false, \"knlc\"))\n    send_command(\"config prompt custom\")\n    reflex_enable(reflex_find_by_name(\"trigger\", \"lc prompt detected\", false, false, \"knlc\")) \n    }"}],"actions":[]},{"type":"group","name":"assessing","enabled":true,"id":122,"items":[{"type":"trigger","name":"lc assess","enabled":true,"id":51,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"You glance over (.*) and see that (his|her) health is at (\\d+)/(\\d+)","actions":[{"action":"script","script":"//client.print(\"assess matched\")\n//client.print(args[4])\nset_variable(\"lastHit\", args[1])"}]}],"actions":[]}]}